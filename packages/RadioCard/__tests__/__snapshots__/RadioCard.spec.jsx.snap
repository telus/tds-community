// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioCard has a fake radio 1`] = `
Array [
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.3rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > div > .c0 > span {
  display: block;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<RadioCard__FakeRadio
    data-testid="fake-input"
  >
    <StyledComponent
      data-testid="fake-input"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "c0",
            "isStatic": false,
            "lastClassName": "c1",
            "rules": Array [
              "height: 1.25rem;",
              "width: 1.25rem;",
              "min-height: 1.25rem;",
              "min-width: 1.25rem;",
              "outline: 0;",
              "line-height: 0;",
              "display: flex;",
              "align-items: center;",
              "justify-content: center;",
              "cursor: pointer;",
              "margin-top: 0.3rem;",
              "transition: border-color 0.1s linear, background-color 0.1s linear;",
              "border-radius: 50%;",
              "border-width: 1px;",
              "border-style: solid;",
              "border-color: #54595f;",
              "background-color: #fff;",
              "& > i {",
              "display: none;",
              "}",
            ],
          },
          "displayName": "RadioCard__FakeRadio",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "c0",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0 c1"
        data-testid="fake-input"
      >
        <RadioCard__InnerChecked>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "RadioCard__InnerChecked-sc-17k3pnw-3",
                  "isStatic": false,
                  "lastClassName": "c2",
                  "rules": Array [
                    "width: 0.75rem;",
                    "height: 0.75rem;",
                    "border-radius: 50%;",
                    "background-color: #2B8000;",
                    "display: none;",
                  ],
                },
                "displayName": "RadioCard__InnerChecked",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "RadioCard__InnerChecked-sc-17k3pnw-3",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c2"
            />
          </StyledComponent>
        </RadioCard__InnerChecked>
      </span>
    </StyledComponent>
  </RadioCard__FakeRadio>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.3rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > div > .c0 > span {
  display: block;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<StyledComponent
    data-testid="fake-input"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "c0",
          "isStatic": false,
          "lastClassName": "c1",
          "rules": Array [
            "height: 1.25rem;",
            "width: 1.25rem;",
            "min-height: 1.25rem;",
            "min-width: 1.25rem;",
            "outline: 0;",
            "line-height: 0;",
            "display: flex;",
            "align-items: center;",
            "justify-content: center;",
            "cursor: pointer;",
            "margin-top: 0.3rem;",
            "transition: border-color 0.1s linear, background-color 0.1s linear;",
            "border-radius: 50%;",
            "border-width: 1px;",
            "border-style: solid;",
            "border-color: #54595f;",
            "background-color: #fff;",
            "& > i {",
            "display: none;",
            "}",
          ],
        },
        "displayName": "RadioCard__FakeRadio",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "c0",
        "target": "span",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <span
      className="c0 c1"
      data-testid="fake-input"
    >
      <RadioCard__InnerChecked>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "RadioCard__InnerChecked-sc-17k3pnw-3",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "width: 0.75rem;",
                  "height: 0.75rem;",
                  "border-radius: 50%;",
                  "background-color: #2B8000;",
                  "display: none;",
                ],
              },
              "displayName": "RadioCard__InnerChecked",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "RadioCard__InnerChecked-sc-17k3pnw-3",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <span
            className="c2"
          />
        </StyledComponent>
      </RadioCard__InnerChecked>
    </span>
  </StyledComponent>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.3rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > div > .c0 > span {
  display: block;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<span
    className="c0 c1"
    data-testid="fake-input"
  >
    <RadioCard__InnerChecked>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RadioCard__InnerChecked-sc-17k3pnw-3",
              "isStatic": false,
              "lastClassName": "c2",
              "rules": Array [
                "width: 0.75rem;",
                "height: 0.75rem;",
                "border-radius: 50%;",
                "background-color: #2B8000;",
                "display: none;",
              ],
            },
            "displayName": "RadioCard__InnerChecked",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RadioCard__InnerChecked-sc-17k3pnw-3",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="c2"
        />
      </StyledComponent>
    </RadioCard__InnerChecked>
  </span>,
]
`;

exports[`RadioCard must have a label 1`] = `
.c2 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-left: 1rem;
  padding-right: 1rem;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c3 > *:not(:last-child) {
  margin-right: 1rem;
}

.c9 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c10 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c11 {
  color: #2a2c2e;
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  text-align: left;
}

.c11 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c7 {
  word-wrap: break-word;
  color: #2a2c2e;
  font-weight: 700;
  font-size: 1.25rem;
  line-height: 1.4;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
}

.c7 sup {
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
  font-size: 0.875rem;
  top: -0.5em;
}

.c7 > span {
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
}

.c5 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.3rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c5 > i {
  display: none;
}

.c0 {
  border-width: 0;
  border-radius: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  height: 100%;
  border: 0.0625rem solid #d8d8d8;
  box-shadow: 0 0 1rem 0 rgba(0,0,0,0.1);
  background-color: #fff;
  -webkit-transition: -webkit-transform 0.2s ease-in-out,background 0.2s,color 0.2s,border 0.2s ease;
  -webkit-transition: transform 0.2s ease-in-out,background 0.2s,color 0.2s,border 0.2s ease;
  transition: transform 0.2s ease-in-out,background 0.2s,color 0.2s,border 0.2s ease;
}

.c0:hover {
  border: 0.0625rem solid #2B8000 !important;
  box-shadow: 0 0 0 0.0625rem #2B8000 !important;
}

.c0:active {
  border: 0.0625rem solid #2B8000;
  box-shadow: 0 0 0 0.0625rem #2B8000,0 0 0 0.125rem #FFFFFF inset,0 0 0 0.1875rem #2B8000 inset !important;
  background: #f4f9f2;
}

.c0:hover {
  -webkit-transform: scale(1.025);
  -ms-transform: scale(1.025);
  transform: scale(1.025);
}

.c12:focus ~ .c0 > div > div > .c4 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c12:checked ~ .c0 > div > div > .c4 {
  border-color: #54595f;
}

.c12:checked ~ .c0 > div > div > .c4 > span {
  display: block;
}

.c6 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

.c1 {
  width: 100%;
  margin-right: 0.5rem;
}

.c8 {
  margin-left: 2.25rem;
}

@media (max-width:767px) {
  .c2 {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
  }
}

@media (min-width:768px) {
  .c2 {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c0 {
    -webkit-transition: none !important;
    transition: none !important;
    -webkit-transform: none !important;
    -ms-transform: none !important;
    transform: none !important;
  }
}

@media (min-width:768px) {
  .c1 {
    margin-right: 1rem;
  }
}

<label
  className="c0"
  data-testid="checkbox-label"
  htmlFor="radiogroup_the-value"
>
  <RadioCard__StyledLabelBox
    horizontal={3}
    vertical={4}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "RadioCard__StyledLabelBox-sc-17k3pnw-4",
            "isStatic": false,
            "lastClassName": "c1",
            "rules": Array [
              "width: 100%;",
              "margin-right: 0.5rem;",
              "@media (min-width: 768px) {",
              "margin-right: 1rem;",
              "}",
            ],
          },
          "displayName": "RadioCard__StyledLabelBox",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "RadioCard__StyledLabelBox-sc-17k3pnw-4",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      horizontal={3}
      vertical={4}
    >
      <Box
        className="c1"
        horizontal={3}
        inline={false}
        tag="div"
        vertical={4}
      >
        <styled.div
          className="c1"
          horizontal={3}
          inline={false}
          tag="div"
          vertical={4}
        >
          <StyledComponent
            className="c1"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "c10",
                  "rules": Array [
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            horizontal={3}
            inline={false}
            tag="div"
            vertical={4}
          >
            <div
              className="c2 c1 RadioCard__StyledLabelBox-sc-17k3pnw-4 c1"
            >
              <Box
                between={3}
                inline={true}
                tag="div"
              >
                <styled.div
                  between={3}
                  inline={true}
                  tag="div"
                >
                  <StyledComponent
                    between={3}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          [Function],
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    inline={true}
                    tag="div"
                  >
                    <div
                      className="c3"
                    >
                      <RadioCard__FakeRadio
                        data-testid="fake-input"
                      >
                        <StyledComponent
                          data-testid="fake-input"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c4",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "height: 1.25rem;",
                                  "width: 1.25rem;",
                                  "min-height: 1.25rem;",
                                  "min-width: 1.25rem;",
                                  "outline: 0;",
                                  "line-height: 0;",
                                  "display: flex;",
                                  "align-items: center;",
                                  "justify-content: center;",
                                  "cursor: pointer;",
                                  "margin-top: 0.3rem;",
                                  "transition: border-color 0.1s linear, background-color 0.1s linear;",
                                  "border-radius: 50%;",
                                  "border-width: 1px;",
                                  "border-style: solid;",
                                  "border-color: #54595f;",
                                  "background-color: #fff;",
                                  "& > i {",
                                  "display: none;",
                                  "}",
                                ],
                              },
                              "displayName": "RadioCard__FakeRadio",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c4",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c4 c5"
                            data-testid="fake-input"
                          >
                            <RadioCard__InnerChecked>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "RadioCard__InnerChecked-sc-17k3pnw-3",
                                      "isStatic": false,
                                      "lastClassName": "c6",
                                      "rules": Array [
                                        "width: 0.75rem;",
                                        "height: 0.75rem;",
                                        "border-radius: 50%;",
                                        "background-color: #2B8000;",
                                        "display: none;",
                                      ],
                                    },
                                    "displayName": "RadioCard__InnerChecked",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "RadioCard__InnerChecked-sc-17k3pnw-3",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c6"
                                />
                              </StyledComponent>
                            </RadioCard__InnerChecked>
                          </span>
                        </StyledComponent>
                      </RadioCard__FakeRadio>
                      <Heading
                        invert={false}
                        level="h3"
                      >
                        <Heading__StyledHeading
                          as="h3"
                          data-testid="heading"
                          invert={false}
                          level="h3"
                        >
                          <StyledComponent
                            as="h3"
                            data-testid="heading"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Heading__StyledHeading-mpz92r-0",
                                  "isStatic": false,
                                  "lastClassName": "c7",
                                  "rules": Array [
                                    "word-wrap: break-word;",
                                    [Function],
                                  ],
                                },
                                "displayName": "Heading__StyledHeading",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Heading__StyledHeading-mpz92r-0",
                                "target": "h1",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            invert={false}
                            level="h3"
                          >
                            <h3
                              className="c7"
                              data-testid="heading"
                            >
                              Some label
                            </h3>
                          </StyledComponent>
                        </Heading__StyledHeading>
                      </Heading>
                    </div>
                  </StyledComponent>
                </styled.div>
              </Box>
              <RadioCard__StyledChildrenBox>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "RadioCard__StyledChildrenBox-sc-17k3pnw-5",
                        "isStatic": false,
                        "lastClassName": "c8",
                        "rules": Array [
                          "margin-left: 2.25rem;",
                        ],
                      },
                      "displayName": "RadioCard__StyledChildrenBox",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "RadioCard__StyledChildrenBox-sc-17k3pnw-5",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <Box
                    className="c8"
                    inline={false}
                    tag="div"
                  >
                    <styled.div
                      className="c8"
                      inline={false}
                      tag="div"
                    >
                      <StyledComponent
                        className="c8"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [
                              [Function],
                            ],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bdVaJa",
                              "isStatic": false,
                              "lastClassName": "c10",
                              "rules": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bdVaJa",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        inline={false}
                        tag="div"
                      >
                        <div
                          className="c9 c8 RadioCard__StyledChildrenBox-sc-17k3pnw-5 c8"
                        >
                          <Box
                            inline={false}
                            tag="div"
                            vertical={3}
                          >
                            <styled.div
                              inline={false}
                              tag="div"
                              vertical={3}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [
                                      [Function],
                                    ],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c10",
                                      "rules": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                inline={false}
                                tag="div"
                                vertical={3}
                              >
                                <div
                                  className="c10"
                                >
                                  <Paragraph
                                    align="left"
                                    bold={false}
                                    invert={false}
                                    size="medium"
                                  >
                                    <Paragraph__StyledParagraph
                                      align="left"
                                      bold={false}
                                      invert={false}
                                      size="medium"
                                    >
                                      <StyledComponent
                                        align="left"
                                        bold={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Paragraph__StyledParagraph-efl81j-0",
                                              "isStatic": false,
                                              "lastClassName": "c11",
                                              "rules": Array [
                                                [Function],
                                                "word-wrap: break-word;",
                                                "padding: 0;",
                                                "margin: 0;",
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                "sup {",
                                                "top: -0.5em;",
                                                "font-size: 0.875rem;",
                                                "position: relative;",
                                                "vertical-align: baseline;",
                                                "padding-left: 0.1em;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "Paragraph__StyledParagraph",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Paragraph__StyledParagraph-efl81j-0",
                                            "target": "p",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        invert={false}
                                        size="medium"
                                      >
                                        <p
                                          className="c11"
                                          size="medium"
                                        >
                                          $206.50 due August 15, 2020
                                        </p>
                                      </StyledComponent>
                                    </Paragraph__StyledParagraph>
                                  </Paragraph>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Box>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </Box>
                </StyledComponent>
              </RadioCard__StyledChildrenBox>
            </div>
          </StyledComponent>
        </styled.div>
      </Box>
    </StyledComponent>
  </RadioCard__StyledLabelBox>
</label>
`;

exports[`RadioCard renders 1`] = `
<RadioCard__StyledDiv
  fullHeight={true}
>
  <RadioCard__HiddenInput
    checked={true}
    data-testid="hidden-input"
    id="radiogroup_the-value"
    name="radio_group"
    readOnly={true}
    type="radio"
    value="the-value"
    variant="standard"
  />
  <RadioCard__StyledLabel
    data-testid="checkbox-label"
    htmlFor="radiogroup_the-value"
    variant="standard"
  >
    <RadioCard__StyledLabelBox
      horizontal={3}
      vertical={4}
    >
      <Box
        between={3}
        inline={true}
        tag="div"
      >
        <RadioCard__FakeRadio
          data-testid="fake-input"
        >
          <RadioCard__InnerChecked />
        </RadioCard__FakeRadio>
        <Heading
          invert={false}
          level="h3"
        >
          The radio
        </Heading>
      </Box>
      <RadioCard__StyledChildrenBox>
        <Box
          inline={false}
          tag="div"
          vertical={3}
        >
          <Paragraph
            align="left"
            bold={false}
            invert={false}
            size="medium"
          >
            $206.50 due August 15, 2020
          </Paragraph>
        </Box>
      </RadioCard__StyledChildrenBox>
    </RadioCard__StyledLabelBox>
  </RadioCard__StyledLabel>
</RadioCard__StyledDiv>
`;
