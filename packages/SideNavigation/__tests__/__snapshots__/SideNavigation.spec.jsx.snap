// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SideNavigation renders 1`] = `
.c5:hover {
  background-color: #f2eff4;
}

.c6 {
  color: #54595f;
}

.c6:hover {
  color: #4b286d;
}

.c4 {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c9 {
  padding: 1rem 0;
  background: radial-gradient( ellipse at top, rgba(150,150,150,0.1) 0%, rgba(0,0,0,0) 70% );
}

.c7 {
  background-color: white;
  border: none;
  width: 100%;
  color: #54595f;
  border-left: none;
}

.c7:hover {
  background-color: #f2eff4;
  color: #4b286d;
  cursor: pointer;
}

.c8 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: left;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  position: relative;
  height: 100%;
}

.c1 {
  position: relative;
  max-width: inherit;
  width: 100%;
  overflow-y: auto;
}

.c2 {
  list-style: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  margin: 0;
  border-top: 1px solid #d8d8d8;
}

.c3 {
  border-bottom: 1px solid #d8d8d8;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 0;
}

<SideNavigation
  accordion={true}
  verticalSpacing={3}
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "position: relative; height: 100%;",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={[Function]}
    >
      <div
        className="c0"
      >
        <styled.div
          variant="top"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c4:hover {
  background-color: #f2eff4;
}

.c3 {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c7 {
  padding: 1rem 0;
  background: radial-gradient( ellipse at top, rgba(150,150,150,0.1) 0%, rgba(0,0,0,0) 70% );
}

.c5 {
  background-color: white;
  border: none;
  width: 100%;
  color: #54595f;
  border-left: none;
}

.c5:hover {
  background-color: #f2eff4;
  color: #4b286d;
  cursor: pointer;
}

.c6 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: left;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  position: relative;
  max-width: inherit;
  width: 100%;
  overflow-y: auto;
}

.c1 {
  list-style: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  margin: 0;
  border-top: 1px solid #d8d8d8;
}

.c2 {
  border-bottom: 1px solid #d8d8d8;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 0;
}

<div
                  class="c0"
                  style="width: 0px;"
                >
                  <div
                    class="TDS_Box-modules__verticalPadding-3___Fsv37"
                  >
                    <ul
                      class="c1"
                    >
                      <li
                        class="c2"
                      >
                        <a
                          class="c3"
                          href="#"
                        >
                          <div
                            class="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-3___Fsv37 c4"
                          >
                            <div>
                              <span
                                class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                              >
                                Home
                              </span>
                            </div>
                          </div>
                        </a>
                      </li>
                      <li
                        class="c2"
                      >
                        <a
                          class="c3"
                          href="#one"
                        >
                          <div
                            class="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-3___Fsv37 c4"
                          >
                            <div>
                              <span
                                class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                              >
                                One
                              </span>
                            </div>
                          </div>
                        </a>
                      </li>
                      <li
                        class="c2"
                      >
                        <a
                          class="c3"
                          href="#two"
                        >
                          <div
                            class="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-3___Fsv37 c4"
                          >
                            <div>
                              <span
                                class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                              >
                                Two
                              </span>
                            </div>
                          </div>
                        </a>
                      </li>
                      <li
                        class="c2"
                      >
                        <div>
                          <button
                            class="c5"
                            id="TDS-SideNavigation-3"
                          >
                            <div
                              class="TDS_Box-modules__horizontalPadding-2___3hmwJ TDS_Box-modules__verticalPadding-3___Fsv37 c6"
                            >
                              <div>
                                <span
                                  class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                                >
                                  Threefdsfdsfds
                                </span>
                              </div>
                              <i
                                aria-hidden="true"
                                class="TDS_Icon-modules__iconCaretDown___3by8b TDS_Icon-modules__icon___13xYd TDS_Icon-modules__secondary___3Gtcp TDS_Icon-modules__size16___1pm12"
                              />
                            </div>
                          </button>
                          <div
                            aria-hidden="true"
                            data-testid="childrenContainer"
                            style="transition: height 500ms; height: 0px; overflow: hidden; visibility: hidden;"
                          >
                            <ul
                              class="c7"
                            >
                              <li>
                                <a
                                  class="c3"
                                  href="#"
                                >
                                  <div
                                    class="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-2___1Uh2T c4"
                                  >
                                    <div>
                                      <span
                                        class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__small___mt5lS TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__smallFont___3S6nz TDS_Typography-modules__inheritColor___SREX0"
                                      >
                                        Option 1
                                      </span>
                                    </div>
                                  </div>
                                </a>
                              </li>
                              <li>
                                <a
                                  class="c3"
                                  href="#"
                                >
                                  <div
                                    class="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-2___1Uh2T c4"
                                  >
                                    <div>
                                      <span
                                        class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__small___mt5lS TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__smallFont___3S6nz TDS_Typography-modules__inheritColor___SREX0"
                                      >
                                        Option 2
                                      </span>
                                    </div>
                                  </div>
                                </a>
                              </li>
                              <li>
                                <a
                                  class="c3"
                                  href="#"
                                >
                                  <div
                                    class="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-2___1Uh2T c4"
                                  >
                                    <div>
                                      <span
                                        class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__small___mt5lS TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__smallFont___3S6nz TDS_Typography-modules__inheritColor___SREX0"
                                      >
                                        Option 3
                                      </span>
                                    </div>
                                  </div>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                </div>,
              }
            }
            variant="top"
          >
            <div
              className="c1"
            >
              <Box
                inline={false}
                tag="div"
                vertical={3}
              >
                <div
                  className="TDS_Box-modules__verticalPadding-3___Fsv37"
                >
                  <styled.ul>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-htoDjs",
                            "isStatic": true,
                            "lastClassName": "c2",
                            "rules": Array [
                              "list-style: none; display: flex; flex-direction: column; justify-content: space-around; margin: 0; border-top: 1px solid #d8d8d8;",
                            ],
                          },
                          "displayName": "styled.ul",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-htoDjs",
                          "target": "ul",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ul
                        className="c2"
                      >
                        <styled.li
                          key=".0"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "border-bottom: 1px solid #d8d8d8; align-items: center; font-size: 0;",
                                  ],
                                },
                                "displayName": "styled.li",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "li",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <li
                              className="c3"
                            >
                              <Link
                                active={false}
                                href="#"
                                reactRouterLinkComponent={null}
                                subMenuLink={false}
                                to={null}
                              >
                                <styled.a
                                  href="#"
                                  to={null}
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-htpNat",
                                          "isStatic": true,
                                          "lastClassName": "c4",
                                          "rules": Array [
                                            "text-decoration: none;",
                                          ],
                                        },
                                        "displayName": "styled.a",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-htpNat",
                                        "target": "a",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    href="#"
                                    to={null}
                                  >
                                    <a
                                      className="c4"
                                      href="#"
                                      to={null}
                                    >
                                      <Styled(Box)
                                        horizontal={3}
                                        vertical={3}
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-bdVaJa",
                                                "isStatic": false,
                                                "lastClassName": "c5",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Styled(Box)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-bdVaJa",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          horizontal={3}
                                          vertical={3}
                                        >
                                          <Box
                                            className="c5"
                                            horizontal={3}
                                            inline={false}
                                            tag="div"
                                            vertical={3}
                                          >
                                            <div
                                              className="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-3___Fsv37 c5"
                                            >
                                              <Styled(ColoredTextProvider)
                                                active={false}
                                              >
                                                <StyledComponent
                                                  active={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bwzfXH",
                                                        "isStatic": false,
                                                        "lastClassName": "c6",
                                                        "rules": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(ColoredTextProvider)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bwzfXH",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <ColoredTextProvider
                                                    active={false}
                                                    className="c6"
                                                    colorClassName={null}
                                                  >
                                                    <div>
                                                      <Text
                                                        block={false}
                                                        bold={false}
                                                        invert={false}
                                                        size="medium"
                                                      >
                                                        <span
                                                          className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                                                        >
                                                          Home
                                                        </span>
                                                      </Text>
                                                    </div>
                                                  </ColoredTextProvider>
                                                </StyledComponent>
                                              </Styled(ColoredTextProvider)>
                                            </div>
                                          </Box>
                                        </StyledComponent>
                                      </Styled(Box)>
                                    </a>
                                  </StyledComponent>
                                </styled.a>
                              </Link>
                            </li>
                          </StyledComponent>
                        </styled.li>
                        <styled.li
                          key=".1"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "border-bottom: 1px solid #d8d8d8; align-items: center; font-size: 0;",
                                  ],
                                },
                                "displayName": "styled.li",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "li",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <li
                              className="c3"
                            >
                              <Link
                                active={false}
                                href="#one"
                                reactRouterLinkComponent={null}
                                subMenuLink={false}
                                to={null}
                              >
                                <styled.a
                                  href="#one"
                                  to={null}
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-htpNat",
                                          "isStatic": true,
                                          "lastClassName": "c4",
                                          "rules": Array [
                                            "text-decoration: none;",
                                          ],
                                        },
                                        "displayName": "styled.a",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-htpNat",
                                        "target": "a",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    href="#one"
                                    to={null}
                                  >
                                    <a
                                      className="c4"
                                      href="#one"
                                      to={null}
                                    >
                                      <Styled(Box)
                                        horizontal={3}
                                        vertical={3}
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-bdVaJa",
                                                "isStatic": false,
                                                "lastClassName": "c5",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Styled(Box)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-bdVaJa",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          horizontal={3}
                                          vertical={3}
                                        >
                                          <Box
                                            className="c5"
                                            horizontal={3}
                                            inline={false}
                                            tag="div"
                                            vertical={3}
                                          >
                                            <div
                                              className="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-3___Fsv37 c5"
                                            >
                                              <Styled(ColoredTextProvider)
                                                active={false}
                                              >
                                                <StyledComponent
                                                  active={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bwzfXH",
                                                        "isStatic": false,
                                                        "lastClassName": "c6",
                                                        "rules": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(ColoredTextProvider)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bwzfXH",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <ColoredTextProvider
                                                    active={false}
                                                    className="c6"
                                                    colorClassName={null}
                                                  >
                                                    <div>
                                                      <Text
                                                        block={false}
                                                        bold={false}
                                                        invert={false}
                                                        size="medium"
                                                      >
                                                        <span
                                                          className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                                                        >
                                                          One
                                                        </span>
                                                      </Text>
                                                    </div>
                                                  </ColoredTextProvider>
                                                </StyledComponent>
                                              </Styled(ColoredTextProvider)>
                                            </div>
                                          </Box>
                                        </StyledComponent>
                                      </Styled(Box)>
                                    </a>
                                  </StyledComponent>
                                </styled.a>
                              </Link>
                            </li>
                          </StyledComponent>
                        </styled.li>
                        <styled.li
                          key=".2"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "border-bottom: 1px solid #d8d8d8; align-items: center; font-size: 0;",
                                  ],
                                },
                                "displayName": "styled.li",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "li",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <li
                              className="c3"
                            >
                              <Link
                                active={false}
                                href="#two"
                                reactRouterLinkComponent={null}
                                subMenuLink={false}
                                to={null}
                              >
                                <styled.a
                                  href="#two"
                                  to={null}
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-htpNat",
                                          "isStatic": true,
                                          "lastClassName": "c4",
                                          "rules": Array [
                                            "text-decoration: none;",
                                          ],
                                        },
                                        "displayName": "styled.a",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-htpNat",
                                        "target": "a",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    href="#two"
                                    to={null}
                                  >
                                    <a
                                      className="c4"
                                      href="#two"
                                      to={null}
                                    >
                                      <Styled(Box)
                                        horizontal={3}
                                        vertical={3}
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-bdVaJa",
                                                "isStatic": false,
                                                "lastClassName": "c5",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Styled(Box)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-bdVaJa",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          horizontal={3}
                                          vertical={3}
                                        >
                                          <Box
                                            className="c5"
                                            horizontal={3}
                                            inline={false}
                                            tag="div"
                                            vertical={3}
                                          >
                                            <div
                                              className="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-3___Fsv37 c5"
                                            >
                                              <Styled(ColoredTextProvider)
                                                active={false}
                                              >
                                                <StyledComponent
                                                  active={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bwzfXH",
                                                        "isStatic": false,
                                                        "lastClassName": "c6",
                                                        "rules": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(ColoredTextProvider)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bwzfXH",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <ColoredTextProvider
                                                    active={false}
                                                    className="c6"
                                                    colorClassName={null}
                                                  >
                                                    <div>
                                                      <Text
                                                        block={false}
                                                        bold={false}
                                                        invert={false}
                                                        size="medium"
                                                      >
                                                        <span
                                                          className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                                                        >
                                                          Two
                                                        </span>
                                                      </Text>
                                                    </div>
                                                  </ColoredTextProvider>
                                                </StyledComponent>
                                              </Styled(ColoredTextProvider)>
                                            </div>
                                          </Box>
                                        </StyledComponent>
                                      </Styled(Box)>
                                    </a>
                                  </StyledComponent>
                                </styled.a>
                              </Link>
                            </li>
                          </StyledComponent>
                        </styled.li>
                        <styled.li
                          key=".3"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "border-bottom: 1px solid #d8d8d8; align-items: center; font-size: 0;",
                                  ],
                                },
                                "displayName": "styled.li",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "li",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <li
                              className="c3"
                            >
                              <SubMenu
                                active={false}
                                handleToggleSubMenu={[Function]}
                                id="TDS-SideNavigation-3"
                                isOpen={false}
                                label="Threefdsfdsfds"
                                onClick={[Function]}
                              >
                                <div>
                                  <styled.button
                                    active={false}
                                    handleToggleSubMenu={[Function]}
                                    id="TDS-SideNavigation-3"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      active={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "button",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      handleToggleSubMenu={[Function]}
                                      id="TDS-SideNavigation-3"
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c7"
                                        id="TDS-SideNavigation-3"
                                        onClick={[Function]}
                                      >
                                        <Styled(Box)
                                          horizontal={2}
                                          inline={true}
                                          vertical={3}
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-EHOje",
                                                  "isStatic": true,
                                                  "lastClassName": "c8",
                                                  "rules": Array [
                                                    "justify-content: space-between; align-items: center; text-align: left; display: flex;",
                                                  ],
                                                },
                                                "displayName": "Styled(Box)",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-EHOje",
                                                "target": [Function],
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            horizontal={2}
                                            inline={true}
                                            vertical={3}
                                          >
                                            <Box
                                              className="c8"
                                              horizontal={2}
                                              inline={true}
                                              tag="div"
                                              vertical={3}
                                            >
                                              <div
                                                className="TDS_Box-modules__horizontalPadding-2___3hmwJ TDS_Box-modules__verticalPadding-3___Fsv37 c8"
                                              >
                                                <ColoredTextProvider
                                                  colorClassName={null}
                                                >
                                                  <div>
                                                    <Text
                                                      block={false}
                                                      bold={false}
                                                      invert={false}
                                                      size="medium"
                                                    >
                                                      <span
                                                        className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                                                      >
                                                        Threefdsfdsfds
                                                      </span>
                                                    </Text>
                                                  </div>
                                                </ColoredTextProvider>
                                                <DecorativeIcon
                                                  size={16}
                                                  symbol="caretDown"
                                                  variant="secondary"
                                                >
                                                  <Icon
                                                    aria-hidden="true"
                                                    size={16}
                                                    symbol="caretDown"
                                                    variant="secondary"
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="TDS_Icon-modules__iconCaretDown___3by8b TDS_Icon-modules__icon___13xYd TDS_Icon-modules__secondary___3Gtcp TDS_Icon-modules__size16___1pm12"
                                                    />
                                                  </Icon>
                                                </DecorativeIcon>
                                              </div>
                                            </Box>
                                          </StyledComponent>
                                        </Styled(Box)>
                                      </button>
                                    </StyledComponent>
                                  </styled.button>
                                  <Reveal
                                    duration={500}
                                    height={0}
                                    in={false}
                                    timeout={0}
                                  >
                                    <Transition
                                      appear={false}
                                      duration={500}
                                      enter={true}
                                      exit={true}
                                      in={false}
                                      mountOnEnter={false}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={0}
                                      unmountOnExit={false}
                                    >
                                      <div
                                        aria-hidden={true}
                                        data-testid="childrenContainer"
                                        style={
                                          Object {
                                            "height": 0,
                                            "overflow": "hidden",
                                            "transition": "height 500ms",
                                            "visibility": "hidden",
                                          }
                                        }
                                      >
                                        <styled.ul>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bxivhb",
                                                  "isStatic": true,
                                                  "lastClassName": "c9",
                                                  "rules": Array [
                                                    "padding: 1rem 0; background: radial-gradient(
    ellipse at top,
    rgba(150, 150, 150, 0.1) 0%,
    rgba(0, 0, 0, 0) 70%
  );",
                                                  ],
                                                },
                                                "displayName": "styled.ul",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bxivhb",
                                                "target": "ul",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={[Function]}
                                          >
                                            <ul
                                              className="c9"
                                            >
                                              <li
                                                key=".0"
                                              >
                                                <Link
                                                  active={false}
                                                  href="#"
                                                  reactRouterLinkComponent={null}
                                                  subMenuLink={true}
                                                  to={null}
                                                >
                                                  <styled.a
                                                    href="#"
                                                    to={null}
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-htpNat",
                                                            "isStatic": true,
                                                            "lastClassName": "c4",
                                                            "rules": Array [
                                                              "text-decoration: none;",
                                                            ],
                                                          },
                                                          "displayName": "styled.a",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-htpNat",
                                                          "target": "a",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="#"
                                                      to={null}
                                                    >
                                                      <a
                                                        className="c4"
                                                        href="#"
                                                        to={null}
                                                      >
                                                        <Styled(Box)
                                                          horizontal={3}
                                                          vertical={2}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bdVaJa",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c5",
                                                                  "rules": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "Styled(Box)",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bdVaJa",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            horizontal={3}
                                                            vertical={2}
                                                          >
                                                            <Box
                                                              className="c5"
                                                              horizontal={3}
                                                              inline={false}
                                                              tag="div"
                                                              vertical={2}
                                                            >
                                                              <div
                                                                className="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-2___1Uh2T c5"
                                                              >
                                                                <Styled(ColoredTextProvider)
                                                                  active={false}
                                                                >
                                                                  <StyledComponent
                                                                    active={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "sc-bwzfXH",
                                                                          "isStatic": false,
                                                                          "lastClassName": "c6",
                                                                          "rules": Array [
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "Styled(ColoredTextProvider)",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "sc-bwzfXH",
                                                                        "target": [Function],
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <ColoredTextProvider
                                                                      active={false}
                                                                      className="c6"
                                                                      colorClassName={null}
                                                                    >
                                                                      <div>
                                                                        <Text
                                                                          block={false}
                                                                          bold={false}
                                                                          invert={false}
                                                                          size="small"
                                                                        >
                                                                          <span
                                                                            className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__small___mt5lS TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__smallFont___3S6nz TDS_Typography-modules__inheritColor___SREX0"
                                                                          >
                                                                            Option 1
                                                                          </span>
                                                                        </Text>
                                                                      </div>
                                                                    </ColoredTextProvider>
                                                                  </StyledComponent>
                                                                </Styled(ColoredTextProvider)>
                                                              </div>
                                                            </Box>
                                                          </StyledComponent>
                                                        </Styled(Box)>
                                                      </a>
                                                    </StyledComponent>
                                                  </styled.a>
                                                </Link>
                                              </li>
                                              <li
                                                key=".1"
                                              >
                                                <Link
                                                  active={false}
                                                  href="#"
                                                  reactRouterLinkComponent={null}
                                                  subMenuLink={true}
                                                  to={null}
                                                >
                                                  <styled.a
                                                    href="#"
                                                    to={null}
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-htpNat",
                                                            "isStatic": true,
                                                            "lastClassName": "c4",
                                                            "rules": Array [
                                                              "text-decoration: none;",
                                                            ],
                                                          },
                                                          "displayName": "styled.a",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-htpNat",
                                                          "target": "a",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="#"
                                                      to={null}
                                                    >
                                                      <a
                                                        className="c4"
                                                        href="#"
                                                        to={null}
                                                      >
                                                        <Styled(Box)
                                                          horizontal={3}
                                                          vertical={2}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bdVaJa",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c5",
                                                                  "rules": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "Styled(Box)",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bdVaJa",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            horizontal={3}
                                                            vertical={2}
                                                          >
                                                            <Box
                                                              className="c5"
                                                              horizontal={3}
                                                              inline={false}
                                                              tag="div"
                                                              vertical={2}
                                                            >
                                                              <div
                                                                className="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-2___1Uh2T c5"
                                                              >
                                                                <Styled(ColoredTextProvider)
                                                                  active={false}
                                                                >
                                                                  <StyledComponent
                                                                    active={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "sc-bwzfXH",
                                                                          "isStatic": false,
                                                                          "lastClassName": "c6",
                                                                          "rules": Array [
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "Styled(ColoredTextProvider)",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "sc-bwzfXH",
                                                                        "target": [Function],
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <ColoredTextProvider
                                                                      active={false}
                                                                      className="c6"
                                                                      colorClassName={null}
                                                                    >
                                                                      <div>
                                                                        <Text
                                                                          block={false}
                                                                          bold={false}
                                                                          invert={false}
                                                                          size="small"
                                                                        >
                                                                          <span
                                                                            className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__small___mt5lS TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__smallFont___3S6nz TDS_Typography-modules__inheritColor___SREX0"
                                                                          >
                                                                            Option 2
                                                                          </span>
                                                                        </Text>
                                                                      </div>
                                                                    </ColoredTextProvider>
                                                                  </StyledComponent>
                                                                </Styled(ColoredTextProvider)>
                                                              </div>
                                                            </Box>
                                                          </StyledComponent>
                                                        </Styled(Box)>
                                                      </a>
                                                    </StyledComponent>
                                                  </styled.a>
                                                </Link>
                                              </li>
                                              <li
                                                key=".2"
                                              >
                                                <Link
                                                  active={false}
                                                  href="#"
                                                  reactRouterLinkComponent={null}
                                                  subMenuLink={true}
                                                  to={null}
                                                >
                                                  <styled.a
                                                    href="#"
                                                    to={null}
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-htpNat",
                                                            "isStatic": true,
                                                            "lastClassName": "c4",
                                                            "rules": Array [
                                                              "text-decoration: none;",
                                                            ],
                                                          },
                                                          "displayName": "styled.a",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-htpNat",
                                                          "target": "a",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="#"
                                                      to={null}
                                                    >
                                                      <a
                                                        className="c4"
                                                        href="#"
                                                        to={null}
                                                      >
                                                        <Styled(Box)
                                                          horizontal={3}
                                                          vertical={2}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bdVaJa",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c5",
                                                                  "rules": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "Styled(Box)",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bdVaJa",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            horizontal={3}
                                                            vertical={2}
                                                          >
                                                            <Box
                                                              className="c5"
                                                              horizontal={3}
                                                              inline={false}
                                                              tag="div"
                                                              vertical={2}
                                                            >
                                                              <div
                                                                className="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-2___1Uh2T c5"
                                                              >
                                                                <Styled(ColoredTextProvider)
                                                                  active={false}
                                                                >
                                                                  <StyledComponent
                                                                    active={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "sc-bwzfXH",
                                                                          "isStatic": false,
                                                                          "lastClassName": "c6",
                                                                          "rules": Array [
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "Styled(ColoredTextProvider)",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "sc-bwzfXH",
                                                                        "target": [Function],
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <ColoredTextProvider
                                                                      active={false}
                                                                      className="c6"
                                                                      colorClassName={null}
                                                                    >
                                                                      <div>
                                                                        <Text
                                                                          block={false}
                                                                          bold={false}
                                                                          invert={false}
                                                                          size="small"
                                                                        >
                                                                          <span
                                                                            className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__small___mt5lS TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__smallFont___3S6nz TDS_Typography-modules__inheritColor___SREX0"
                                                                          >
                                                                            Option 3
                                                                          </span>
                                                                        </Text>
                                                                      </div>
                                                                    </ColoredTextProvider>
                                                                  </StyledComponent>
                                                                </Styled(ColoredTextProvider)>
                                                              </div>
                                                            </Box>
                                                          </StyledComponent>
                                                        </Styled(Box)>
                                                      </a>
                                                    </StyledComponent>
                                                  </styled.a>
                                                </Link>
                                              </li>
                                            </ul>
                                          </StyledComponent>
                                        </styled.ul>
                                      </div>
                                    </Transition>
                                  </Reveal>
                                </div>
                              </SubMenu>
                            </li>
                          </StyledComponent>
                        </styled.li>
                      </ul>
                    </StyledComponent>
                  </styled.ul>
                </div>
              </Box>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</SideNavigation>
`;

exports[`SideNavigation renders without vertical spacing 1`] = `
.c5:hover {
  background-color: #f2eff4;
}

.c6 {
  color: #54595f;
}

.c6:hover {
  color: #4b286d;
}

.c4 {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c9 {
  padding: 1rem 0;
  background: radial-gradient( ellipse at top, rgba(150,150,150,0.1) 0%, rgba(0,0,0,0) 70% );
}

.c7 {
  background-color: white;
  border: none;
  width: 100%;
  color: #4b286d;
  border-left: 4px solid #4b286d;
}

.c7:hover {
  background-color: #f2eff4;
  color: #4b286d;
  cursor: pointer;
}

.c8 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: left;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  position: relative;
  height: 100%;
}

.c1 {
  position: relative;
  max-width: inherit;
  width: 100%;
  overflow-y: auto;
}

.c2 {
  list-style: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  margin: 0;
  border-top: 1px solid #d8d8d8;
}

.c3 {
  border-bottom: 1px solid #d8d8d8;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 0;
}

<SideNavigation
  accordion={true}
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "position: relative; height: 100%;",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={[Function]}
    >
      <div
        className="c0"
      >
        <styled.div
          variant="top"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c4:hover {
  background-color: #f2eff4;
}

.c3 {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c7 {
  padding: 1rem 0;
  background: radial-gradient( ellipse at top, rgba(150,150,150,0.1) 0%, rgba(0,0,0,0) 70% );
}

.c5 {
  background-color: white;
  border: none;
  width: 100%;
  color: #4b286d;
  border-left: 4px solid #4b286d;
}

.c5:hover {
  background-color: #f2eff4;
  color: #4b286d;
  cursor: pointer;
}

.c6 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: left;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  position: relative;
  max-width: inherit;
  width: 100%;
  overflow-y: auto;
}

.c1 {
  list-style: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  margin: 0;
  border-top: 1px solid #d8d8d8;
}

.c2 {
  border-bottom: 1px solid #d8d8d8;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 0;
}

<div
                  class="c0"
                  style="width: 0px;"
                >
                  <div
                    class=""
                  >
                    <ul
                      class="c1"
                    >
                      <li
                        class="c2"
                      >
                        <a
                          class="c3"
                          href="#"
                        >
                          <div
                            class="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-3___Fsv37 c4"
                          >
                            <div>
                              <span
                                class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                              >
                                Home
                              </span>
                            </div>
                          </div>
                        </a>
                      </li>
                      <li
                        class="c2"
                      >
                        <div>
                          <button
                            class="c5"
                            id="TDS-SideNavigation-1"
                          >
                            <div
                              class="TDS_Box-modules__horizontalPadding-2___3hmwJ TDS_Box-modules__verticalPadding-3___Fsv37 c6"
                            >
                              <div>
                                <span
                                  class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__boldFont___2YS3O TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__inheritColor___SREX0"
                                >
                                  Threefdsfdsfds
                                </span>
                              </div>
                              <i
                                aria-hidden="true"
                                class="TDS_Icon-modules__iconCaretUp___3PL_K TDS_Icon-modules__icon___13xYd TDS_Icon-modules__secondary___3Gtcp TDS_Icon-modules__size16___1pm12"
                              />
                            </div>
                          </button>
                          <div
                            aria-hidden="false"
                            data-testid="childrenContainer"
                            style="transition: height 500ms; height: 0px; overflow: hidden;"
                          >
                            <ul
                              class="c7"
                            >
                              <li>
                                <a
                                  class="c3"
                                  href="#"
                                >
                                  <div
                                    class="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-2___1Uh2T c4"
                                  >
                                    <div>
                                      <span
                                        class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__small___mt5lS TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__smallFont___3S6nz TDS_Typography-modules__inheritColor___SREX0"
                                      >
                                        Option 1
                                      </span>
                                    </div>
                                  </div>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                </div>,
              }
            }
            variant="top"
          >
            <div
              className="c1"
            >
              <Box
                inline={false}
                tag="div"
              >
                <div
                  className=""
                >
                  <styled.ul>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-htoDjs",
                            "isStatic": true,
                            "lastClassName": "c2",
                            "rules": Array [
                              "list-style: none; display: flex; flex-direction: column; justify-content: space-around; margin: 0; border-top: 1px solid #d8d8d8;",
                            ],
                          },
                          "displayName": "styled.ul",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-htoDjs",
                          "target": "ul",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ul
                        className="c2"
                      >
                        <styled.li
                          key=".0"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "border-bottom: 1px solid #d8d8d8; align-items: center; font-size: 0;",
                                  ],
                                },
                                "displayName": "styled.li",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "li",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <li
                              className="c3"
                            >
                              <Link
                                active={false}
                                href="#"
                                reactRouterLinkComponent={null}
                                subMenuLink={false}
                                to={null}
                              >
                                <styled.a
                                  href="#"
                                  to={null}
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-htpNat",
                                          "isStatic": true,
                                          "lastClassName": "c4",
                                          "rules": Array [
                                            "text-decoration: none;",
                                          ],
                                        },
                                        "displayName": "styled.a",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-htpNat",
                                        "target": "a",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    href="#"
                                    to={null}
                                  >
                                    <a
                                      className="c4"
                                      href="#"
                                      to={null}
                                    >
                                      <Styled(Box)
                                        horizontal={3}
                                        vertical={3}
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-bdVaJa",
                                                "isStatic": false,
                                                "lastClassName": "c5",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Styled(Box)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-bdVaJa",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          horizontal={3}
                                          vertical={3}
                                        >
                                          <Box
                                            className="c5"
                                            horizontal={3}
                                            inline={false}
                                            tag="div"
                                            vertical={3}
                                          >
                                            <div
                                              className="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-3___Fsv37 c5"
                                            >
                                              <Styled(ColoredTextProvider)
                                                active={false}
                                              >
                                                <StyledComponent
                                                  active={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bwzfXH",
                                                        "isStatic": false,
                                                        "lastClassName": "c6",
                                                        "rules": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(ColoredTextProvider)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bwzfXH",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <ColoredTextProvider
                                                    active={false}
                                                    className="c6"
                                                    colorClassName={null}
                                                  >
                                                    <div>
                                                      <Text
                                                        block={false}
                                                        bold={false}
                                                        invert={false}
                                                        size="medium"
                                                      >
                                                        <span
                                                          className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__inheritColor___SREX0"
                                                        >
                                                          Home
                                                        </span>
                                                      </Text>
                                                    </div>
                                                  </ColoredTextProvider>
                                                </StyledComponent>
                                              </Styled(ColoredTextProvider)>
                                            </div>
                                          </Box>
                                        </StyledComponent>
                                      </Styled(Box)>
                                    </a>
                                  </StyledComponent>
                                </styled.a>
                              </Link>
                            </li>
                          </StyledComponent>
                        </styled.li>
                        <styled.li
                          key=".1"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "border-bottom: 1px solid #d8d8d8; align-items: center; font-size: 0;",
                                  ],
                                },
                                "displayName": "styled.li",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "li",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <li
                              className="c3"
                            >
                              <SubMenu
                                active={true}
                                handleToggleSubMenu={[Function]}
                                id="TDS-SideNavigation-1"
                                isOpen={true}
                                label="Threefdsfdsfds"
                                onClick={[Function]}
                              >
                                <div>
                                  <styled.button
                                    active={true}
                                    handleToggleSubMenu={[Function]}
                                    id="TDS-SideNavigation-1"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      active={true}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "button",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      handleToggleSubMenu={[Function]}
                                      id="TDS-SideNavigation-1"
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c7"
                                        id="TDS-SideNavigation-1"
                                        onClick={[Function]}
                                      >
                                        <Styled(Box)
                                          horizontal={2}
                                          inline={true}
                                          vertical={3}
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-EHOje",
                                                  "isStatic": true,
                                                  "lastClassName": "c8",
                                                  "rules": Array [
                                                    "justify-content: space-between; align-items: center; text-align: left; display: flex;",
                                                  ],
                                                },
                                                "displayName": "Styled(Box)",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-EHOje",
                                                "target": [Function],
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            horizontal={2}
                                            inline={true}
                                            vertical={3}
                                          >
                                            <Box
                                              className="c8"
                                              horizontal={2}
                                              inline={true}
                                              tag="div"
                                              vertical={3}
                                            >
                                              <div
                                                className="TDS_Box-modules__horizontalPadding-2___3hmwJ TDS_Box-modules__verticalPadding-3___Fsv37 c8"
                                              >
                                                <ColoredTextProvider
                                                  colorClassName={null}
                                                >
                                                  <div>
                                                    <Text
                                                      block={false}
                                                      bold={true}
                                                      invert={false}
                                                      size="medium"
                                                    >
                                                      <span
                                                        className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__boldFont___2YS3O TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__inheritColor___SREX0"
                                                      >
                                                        Threefdsfdsfds
                                                      </span>
                                                    </Text>
                                                  </div>
                                                </ColoredTextProvider>
                                                <DecorativeIcon
                                                  size={16}
                                                  symbol="caretUp"
                                                  variant="secondary"
                                                >
                                                  <Icon
                                                    aria-hidden="true"
                                                    size={16}
                                                    symbol="caretUp"
                                                    variant="secondary"
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="TDS_Icon-modules__iconCaretUp___3PL_K TDS_Icon-modules__icon___13xYd TDS_Icon-modules__secondary___3Gtcp TDS_Icon-modules__size16___1pm12"
                                                    />
                                                  </Icon>
                                                </DecorativeIcon>
                                              </div>
                                            </Box>
                                          </StyledComponent>
                                        </Styled(Box)>
                                      </button>
                                    </StyledComponent>
                                  </styled.button>
                                  <Reveal
                                    duration={500}
                                    height={0}
                                    in={true}
                                    timeout={500}
                                  >
                                    <Transition
                                      appear={false}
                                      duration={500}
                                      enter={true}
                                      exit={true}
                                      in={true}
                                      mountOnEnter={false}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={500}
                                      unmountOnExit={false}
                                    >
                                      <div
                                        aria-hidden={false}
                                        data-testid="childrenContainer"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "overflow": "hidden",
                                            "transition": "height 500ms",
                                          }
                                        }
                                      >
                                        <styled.ul>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bxivhb",
                                                  "isStatic": true,
                                                  "lastClassName": "c9",
                                                  "rules": Array [
                                                    "padding: 1rem 0; background: radial-gradient(
    ellipse at top,
    rgba(150, 150, 150, 0.1) 0%,
    rgba(0, 0, 0, 0) 70%
  );",
                                                  ],
                                                },
                                                "displayName": "styled.ul",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bxivhb",
                                                "target": "ul",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={[Function]}
                                          >
                                            <ul
                                              className="c9"
                                            >
                                              <li
                                                key=".0"
                                              >
                                                <Link
                                                  active={false}
                                                  href="#"
                                                  reactRouterLinkComponent={null}
                                                  subMenuLink={true}
                                                  to={null}
                                                >
                                                  <styled.a
                                                    href="#"
                                                    to={null}
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-htpNat",
                                                            "isStatic": true,
                                                            "lastClassName": "c4",
                                                            "rules": Array [
                                                              "text-decoration: none;",
                                                            ],
                                                          },
                                                          "displayName": "styled.a",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-htpNat",
                                                          "target": "a",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="#"
                                                      to={null}
                                                    >
                                                      <a
                                                        className="c4"
                                                        href="#"
                                                        to={null}
                                                      >
                                                        <Styled(Box)
                                                          horizontal={3}
                                                          vertical={2}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bdVaJa",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c5",
                                                                  "rules": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "Styled(Box)",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bdVaJa",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            horizontal={3}
                                                            vertical={2}
                                                          >
                                                            <Box
                                                              className="c5"
                                                              horizontal={3}
                                                              inline={false}
                                                              tag="div"
                                                              vertical={2}
                                                            >
                                                              <div
                                                                className="TDS_Box-modules__horizontalPadding-3___2uoUp TDS_Box-modules__verticalPadding-2___1Uh2T c5"
                                                              >
                                                                <Styled(ColoredTextProvider)
                                                                  active={false}
                                                                >
                                                                  <StyledComponent
                                                                    active={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "sc-bwzfXH",
                                                                          "isStatic": false,
                                                                          "lastClassName": "c6",
                                                                          "rules": Array [
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "Styled(ColoredTextProvider)",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "sc-bwzfXH",
                                                                        "target": [Function],
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <ColoredTextProvider
                                                                      active={false}
                                                                      className="c6"
                                                                      colorClassName={null}
                                                                    >
                                                                      <div>
                                                                        <Text
                                                                          block={false}
                                                                          bold={false}
                                                                          invert={false}
                                                                          size="small"
                                                                        >
                                                                          <span
                                                                            className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__small___mt5lS TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__smallFont___3S6nz TDS_Typography-modules__inheritColor___SREX0"
                                                                          >
                                                                            Option 1
                                                                          </span>
                                                                        </Text>
                                                                      </div>
                                                                    </ColoredTextProvider>
                                                                  </StyledComponent>
                                                                </Styled(ColoredTextProvider)>
                                                              </div>
                                                            </Box>
                                                          </StyledComponent>
                                                        </Styled(Box)>
                                                      </a>
                                                    </StyledComponent>
                                                  </styled.a>
                                                </Link>
                                              </li>
                                            </ul>
                                          </StyledComponent>
                                        </styled.ul>
                                      </div>
                                    </Transition>
                                  </Reveal>
                                </div>
                              </SubMenu>
                            </li>
                          </StyledComponent>
                        </styled.li>
                      </ul>
                    </StyledComponent>
                  </styled.ul>
                </div>
              </Box>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</SideNavigation>
`;
