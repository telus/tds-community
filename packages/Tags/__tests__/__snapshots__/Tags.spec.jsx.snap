// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tags renders 1`] = `
.c0 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c8 {
  background-color: #d8d8d8;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  border-radius: 50%;
  -webkit-transition: -webkit-transform 200ms ease-in-out;
  -webkit-transition: transform 200ms ease-in-out;
  transition: transform 200ms ease-in-out;
  -webkit-transform: scale(0,0);
  -ms-transform: scale(0,0);
  transform: scale(0,0);
}

.c6:focus .c8,
.c6:active .c8 {
  -webkit-transform: scale(1,1);
  -ms-transform: scale(1,1);
  transform: scale(1,1);
}

.c9 {
  fill: #2a2c2e;
  width: 1.5rem;
  height: 1.5rem;
  z-index: 2;
  -webkit-transition: -webkit-transform 150ms ease-in-out;
  -webkit-transition: transform 150ms ease-in-out;
  transition: transform 150ms ease-in-out;
}

.c7 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  outline: none;
  width: 2.5rem;
  height: 2.5rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-tap-highlight-color: transparent;
  -webkit-transition: -webkit-transform 150ms ease-in-out;
  -webkit-transition: transform 150ms ease-in-out;
  transition: transform 150ms ease-in-out;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c7:hover svg {
  -webkit-transform: scale(1.1,1.1);
  -ms-transform: scale(1.1,1.1);
  transform: scale(1.1,1.1);
}

.c7:active svg {
  -webkit-transform: scale(1,1);
  -ms-transform: scale(1,1);
  transform: scale(1,1);
}

.c3 {
  margin-top: 1rem;
  overflow: visible;
  color: #4b286d;
  background: #fff;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  border: 1px solid #4b286d;
  border-radius: 1.25rem;
  height: 2.5rem;
}

.c3:hover {
  background: #fff;
}

.c3:hover:after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  bottom: -2px;
  right: -2px;
  border: 1px solid #33204C;
  border-radius: 1.375rem;
}

.c3::-moz-focus-inner {
  border: 0;
}

.c3:focus {
  outline: none;
  background-color: #fff;
}

.c3:focus:after {
  content: '';
  position: absolute;
  top: -11px;
  left: -11px;
  bottom: -11px;
  right: -11px;
  border: 3px solid #7557A0;
  margin: 5px;
  border-radius: 1.5625rem;
}

.c3:active {
  background-color: #F1EFF4;
}

.c3:after {
  content: '';
}

.c5 {
  margin-left: 0.5rem;
}

.c1 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: -1rem;
}

@media (prefers-reduced-motion:reduce) {
  .c8 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c9 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c7 {
    -webkit-transition: none;
    transition: none;
  }
}

<Tags
  copy="en"
  onClick={[Function]}
  tags={
    Array [
      Object {
        "children": "Android",
        "isLoading": false,
        "isSelected": false,
      },
      Object {
        "children": "iOS",
        "isLoading": false,
        "isSelected": false,
      },
    ]
  }
>
  <div>
    <A11yContent
      aria-live="assertive"
      id="tags1"
    >
      <A11yContent__StyledA11yContent
        aria-live="assertive"
        id="tags1"
      >
        <StyledComponent
          aria-live="assertive"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "position: absolute;",
                  "height: 1px;",
                  "width: 1px;",
                  "overflow: hidden;",
                  "clip: rect(1px, 1px, 1px, 1px);",
                ],
              },
              "displayName": "A11yContent__StyledA11yContent",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          id="tags1"
        >
          <span
            aria-live="assertive"
            className="c0"
            id="tags1"
          >
            No product filters currently applied
          </span>
        </StyledComponent>
      </A11yContent__StyledA11yContent>
    </A11yContent>
    <Tags__StyledTagsContainer
      between={3}
      inline={true}
    >
      <StyledComponent
        between={3}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "flex-wrap: wrap;",
                "margin-top: -1rem;",
              ],
            },
            "displayName": "Tags__StyledTagsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inline={true}
      >
        <Box
          between={3}
          className="c1"
          inline={true}
          tag="div"
        >
          <styled.div
            between={3}
            className="c1"
            inline={true}
            tag="div"
          >
            <StyledComponent
              between={3}
              className="c1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inline={true}
              tag="div"
            >
              <div
                className="c2 c1 Tags__StyledTagsContainer-sc-17pk8ma-0 c1"
              >
                <TagItem
                  aria-describedby="tags1"
                  aria-label="Filter products by Android"
                  isLoading={false}
                  isSelected={false}
                  key="Android"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags1"
                    aria-label="Filter products by Android"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags1"
                      aria-label="Filter products by Android"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags1"
                        aria-label="Filter products by Android"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags1"
                          aria-label="Filter products by Android"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags1"
                            aria-label="Filter products by Android"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags1"
                              aria-label="Filter products by Android"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    Android
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Add
                                color="telusPurple"
                              >
                                <Button
                                  color="telusPurple"
                                  tag="button"
                                  variant="default"
                                >
                                  <ThemeProvider
                                    theme={
                                      Object {
                                        "hoverBackgroundColor": "#d8d8d8",
                                        "iconColor": "#2a2c2e",
                                      }
                                    }
                                  >
                                    <Styled(StyledInteractiveIconButton)
                                      as="button"
                                      color="telusPurple"
                                      variant="default"
                                    >
                                      <StyledComponent
                                        as="button"
                                        color="telusPurple"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-htpNat",
                                              "isStatic": false,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                "padding: 0;",
                                                "margin: 0;",
                                                "border-width: 0;",
                                                "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                                                "color: #2a2c2e;",
                                                "appearance: none;",
                                                "background: none;",
                                                "box-shadow: none;",
                                                "cursor: pointer;",
                                                [Function],
                                                "width: 2.5rem;",
                                                "height: 2.5rem;",
                                                "display: inline-flex;",
                                                "justify-content: center;",
                                                "align-items: center;",
                                                "position: relative;",
                                                "-webkit-tap-highlight-color: transparent;",
                                                "transition: transform 150ms ease-in-out;",
                                                "&:hover svg {",
                                                "transform: scale(1.1, 1.1);",
                                                "}",
                                                "&:active svg {",
                                                "transform: scale(1, 1);",
                                                "}",
                                                "@media (prefers-reduced-motion: reduce) {",
                                                "transition: none;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "Styled(StyledInteractiveIconButton)",
                                            "foldedComponentIds": Array [
                                              "c6",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "sc-htpNat",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        variant="default"
                                      >
                                        <button
                                          className="c6 c7"
                                          color="telusPurple"
                                        >
                                          <A11yContent>
                                            <A11yContent__StyledA11yContent>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                      "isStatic": false,
                                                      "lastClassName": "c0",
                                                      "rules": Array [
                                                        "position: absolute;",
                                                        "height: 1px;",
                                                        "width: 1px;",
                                                        "overflow: hidden;",
                                                        "clip: rect(1px, 1px, 1px, 1px);",
                                                      ],
                                                    },
                                                    "displayName": "A11yContent__StyledA11yContent",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c0"
                                                />
                                              </StyledComponent>
                                            </A11yContent__StyledA11yContent>
                                          </A11yContent>
                                          <StyledInteractiveIconHover>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                    "isStatic": false,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      [Function],
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                      "position: absolute;",
                                                      "top: 0;",
                                                      "left: 0;",
                                                      "width: 100%;",
                                                      "height: 100%;",
                                                      "z-index: 1;",
                                                      "border-radius: 50%;",
                                                      "transition: transform 200ms ease-in-out;",
                                                      "transform: scale(0,0);",
                                                      ".c6:focus &, .c6:active & {",
                                                      "transform: scale(1,1);",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "StyledInteractiveIconHover",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                  "target": "span",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <span
                                                className="c8"
                                              />
                                            </StyledComponent>
                                          </StyledInteractiveIconHover>
                                          <Styled(StyledInteractiveIconSVG)
                                            height="24"
                                            viewBox="0 0 24 24"
                                            width="24"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c9",
                                                    "rules": Array [
                                                      [Function],
                                                      "width: 1.5rem;",
                                                      "height: 1.5rem;",
                                                      "z-index: 2;",
                                                      "transition: transform 150ms ease-in-out;",
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(StyledInteractiveIconSVG)",
                                                  "foldedComponentIds": Array [
                                                    "StyledInteractiveIconSVG-ix2erv-0",
                                                  ],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": "svg",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              height="24"
                                              viewBox="0 0 24 24"
                                              width="24"
                                            >
                                              <svg
                                                className="c9"
                                                height="24"
                                                viewBox="0 0 24 24"
                                                width="24"
                                              >
                                                <path
                                                  d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                                  fillRule="nonzero"
                                                />
                                              </svg>
                                            </StyledComponent>
                                          </Styled(StyledInteractiveIconSVG)>
                                        </button>
                                      </StyledComponent>
                                    </Styled(StyledInteractiveIconButton)>
                                  </ThemeProvider>
                                </Button>
                              </Add>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
                <TagItem
                  aria-describedby="tags1"
                  aria-label="Filter products by iOS"
                  isLoading={false}
                  isSelected={false}
                  key="iOS"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags1"
                    aria-label="Filter products by iOS"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags1"
                      aria-label="Filter products by iOS"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags1"
                        aria-label="Filter products by iOS"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags1"
                          aria-label="Filter products by iOS"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags1"
                            aria-label="Filter products by iOS"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags1"
                              aria-label="Filter products by iOS"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    iOS
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Add
                                color="telusPurple"
                              >
                                <Button
                                  color="telusPurple"
                                  tag="button"
                                  variant="default"
                                >
                                  <ThemeProvider
                                    theme={
                                      Object {
                                        "hoverBackgroundColor": "#d8d8d8",
                                        "iconColor": "#2a2c2e",
                                      }
                                    }
                                  >
                                    <Styled(StyledInteractiveIconButton)
                                      as="button"
                                      color="telusPurple"
                                      variant="default"
                                    >
                                      <StyledComponent
                                        as="button"
                                        color="telusPurple"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-htpNat",
                                              "isStatic": false,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                "padding: 0;",
                                                "margin: 0;",
                                                "border-width: 0;",
                                                "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                                                "color: #2a2c2e;",
                                                "appearance: none;",
                                                "background: none;",
                                                "box-shadow: none;",
                                                "cursor: pointer;",
                                                [Function],
                                                "width: 2.5rem;",
                                                "height: 2.5rem;",
                                                "display: inline-flex;",
                                                "justify-content: center;",
                                                "align-items: center;",
                                                "position: relative;",
                                                "-webkit-tap-highlight-color: transparent;",
                                                "transition: transform 150ms ease-in-out;",
                                                "&:hover svg {",
                                                "transform: scale(1.1, 1.1);",
                                                "}",
                                                "&:active svg {",
                                                "transform: scale(1, 1);",
                                                "}",
                                                "@media (prefers-reduced-motion: reduce) {",
                                                "transition: none;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "Styled(StyledInteractiveIconButton)",
                                            "foldedComponentIds": Array [
                                              "c6",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "sc-htpNat",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        variant="default"
                                      >
                                        <button
                                          className="c6 c7"
                                          color="telusPurple"
                                        >
                                          <A11yContent>
                                            <A11yContent__StyledA11yContent>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                      "isStatic": false,
                                                      "lastClassName": "c0",
                                                      "rules": Array [
                                                        "position: absolute;",
                                                        "height: 1px;",
                                                        "width: 1px;",
                                                        "overflow: hidden;",
                                                        "clip: rect(1px, 1px, 1px, 1px);",
                                                      ],
                                                    },
                                                    "displayName": "A11yContent__StyledA11yContent",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c0"
                                                />
                                              </StyledComponent>
                                            </A11yContent__StyledA11yContent>
                                          </A11yContent>
                                          <StyledInteractiveIconHover>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                    "isStatic": false,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      [Function],
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                      "position: absolute;",
                                                      "top: 0;",
                                                      "left: 0;",
                                                      "width: 100%;",
                                                      "height: 100%;",
                                                      "z-index: 1;",
                                                      "border-radius: 50%;",
                                                      "transition: transform 200ms ease-in-out;",
                                                      "transform: scale(0,0);",
                                                      ".c6:focus &, .c6:active & {",
                                                      "transform: scale(1,1);",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "StyledInteractiveIconHover",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                  "target": "span",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <span
                                                className="c8"
                                              />
                                            </StyledComponent>
                                          </StyledInteractiveIconHover>
                                          <Styled(StyledInteractiveIconSVG)
                                            height="24"
                                            viewBox="0 0 24 24"
                                            width="24"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c9",
                                                    "rules": Array [
                                                      [Function],
                                                      "width: 1.5rem;",
                                                      "height: 1.5rem;",
                                                      "z-index: 2;",
                                                      "transition: transform 150ms ease-in-out;",
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(StyledInteractiveIconSVG)",
                                                  "foldedComponentIds": Array [
                                                    "StyledInteractiveIconSVG-ix2erv-0",
                                                  ],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": "svg",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              height="24"
                                              viewBox="0 0 24 24"
                                              width="24"
                                            >
                                              <svg
                                                className="c9"
                                                height="24"
                                                viewBox="0 0 24 24"
                                                width="24"
                                              >
                                                <path
                                                  d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                                  fillRule="nonzero"
                                                />
                                              </svg>
                                            </StyledComponent>
                                          </Styled(StyledInteractiveIconSVG)>
                                        </button>
                                      </StyledComponent>
                                    </Styled(StyledInteractiveIconButton)>
                                  </ThemeProvider>
                                </Button>
                              </Add>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
              </div>
            </StyledComponent>
          </styled.div>
        </Box>
      </StyledComponent>
    </Tags__StyledTagsContainer>
  </div>
</Tags>
`;

exports[`Tags renders isSelected 1`] = `
.c0 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c8 {
  background-color: #d8d8d8;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  border-radius: 50%;
  -webkit-transition: -webkit-transform 200ms ease-in-out;
  -webkit-transition: transform 200ms ease-in-out;
  transition: transform 200ms ease-in-out;
  -webkit-transform: scale(0,0);
  -ms-transform: scale(0,0);
  transform: scale(0,0);
}

.c6:focus .c8,
.c6:active .c8 {
  -webkit-transform: scale(1,1);
  -ms-transform: scale(1,1);
  transform: scale(1,1);
}

.c9 {
  fill: #2a2c2e;
  width: 1.5rem;
  height: 1.5rem;
  z-index: 2;
  -webkit-transition: -webkit-transform 150ms ease-in-out;
  -webkit-transition: transform 150ms ease-in-out;
  transition: transform 150ms ease-in-out;
}

.c7 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  outline: none;
  width: 2.5rem;
  height: 2.5rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-tap-highlight-color: transparent;
  -webkit-transition: -webkit-transform 150ms ease-in-out;
  -webkit-transition: transform 150ms ease-in-out;
  transition: transform 150ms ease-in-out;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c7:hover svg {
  -webkit-transform: scale(1.1,1.1);
  -ms-transform: scale(1.1,1.1);
  transform: scale(1.1,1.1);
}

.c7:active svg {
  -webkit-transform: scale(1,1);
  -ms-transform: scale(1,1);
  transform: scale(1,1);
}

.c3 {
  margin-top: 1rem;
  overflow: visible;
  color: #4b286d;
  background: #fff;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  border: 1px solid #4b286d;
  border-radius: 1.25rem;
  height: 2.5rem;
}

.c3:hover {
  background: #fff;
}

.c3:hover:after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  bottom: -2px;
  right: -2px;
  border: 1px solid #33204C;
  border-radius: 1.375rem;
}

.c3::-moz-focus-inner {
  border: 0;
}

.c3:focus {
  outline: none;
  background-color: #fff;
}

.c3:focus:after {
  content: '';
  position: absolute;
  top: -11px;
  left: -11px;
  bottom: -11px;
  right: -11px;
  border: 3px solid #7557A0;
  margin: 5px;
  border-radius: 1.5625rem;
}

.c3:active {
  background-color: #F1EFF4;
}

.c3:after {
  content: '';
}

.c10 {
  margin-top: 1rem;
  overflow: visible;
  color: #fff;
  background: #4b286d;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  border: 1px solid #4b286d;
  border-radius: 1.25rem;
  height: 2.5rem;
}

.c10:hover {
  background: #33204C;
  border: 1px solid #33204C;
}

.c10:hover:after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  bottom: -2px;
  right: -2px;
  border: 1px solid #33204C;
  border-radius: 1.375rem;
}

.c10::-moz-focus-inner {
  border: 0;
}

.c10:focus {
  outline: none;
  background-color: #33204C;
}

.c10:focus:after {
  content: '';
  position: absolute;
  top: -10px;
  left: -10px;
  bottom: -10px;
  right: -10px;
  border: 2px solid #7557A0;
  margin: 5px;
  border-radius: 1.5625rem;
}

.c10:active {
  background-color: #201430;
  border: 1px solid #201430;
}

.c10:after {
  content: '';
}

.c5 {
  margin-left: 0.5rem;
}

.c1 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: -1rem;
}

@media (prefers-reduced-motion:reduce) {
  .c8 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c9 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c7 {
    -webkit-transition: none;
    transition: none;
  }
}

<Tags
  copy="en"
  onClick={[Function]}
  tags={
    Array [
      Object {
        "children": "Android",
        "isLoading": false,
        "isSelected": false,
      },
      Object {
        "children": "iOS",
        "isLoading": false,
        "isSelected": true,
      },
    ]
  }
>
  <div>
    <A11yContent
      aria-live="assertive"
      id="tags3"
    >
      <A11yContent__StyledA11yContent
        aria-live="assertive"
        id="tags3"
      >
        <StyledComponent
          aria-live="assertive"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "position: absolute;",
                  "height: 1px;",
                  "width: 1px;",
                  "overflow: hidden;",
                  "clip: rect(1px, 1px, 1px, 1px);",
                ],
              },
              "displayName": "A11yContent__StyledA11yContent",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          id="tags3"
        >
          <span
            aria-live="assertive"
            className="c0"
            id="tags3"
          >
            Products currently filtered by iOS
          </span>
        </StyledComponent>
      </A11yContent__StyledA11yContent>
    </A11yContent>
    <Tags__StyledTagsContainer
      between={3}
      inline={true}
    >
      <StyledComponent
        between={3}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "flex-wrap: wrap;",
                "margin-top: -1rem;",
              ],
            },
            "displayName": "Tags__StyledTagsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inline={true}
      >
        <Box
          between={3}
          className="c1"
          inline={true}
          tag="div"
        >
          <styled.div
            between={3}
            className="c1"
            inline={true}
            tag="div"
          >
            <StyledComponent
              between={3}
              className="c1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inline={true}
              tag="div"
            >
              <div
                className="c2 c1 Tags__StyledTagsContainer-sc-17pk8ma-0 c1"
              >
                <TagItem
                  aria-describedby="tags3"
                  aria-label="Filter products by Android"
                  isLoading={false}
                  isSelected={false}
                  key="Android"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags3"
                    aria-label="Filter products by Android"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags3"
                      aria-label="Filter products by Android"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c10",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags3"
                        aria-label="Filter products by Android"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags3"
                          aria-label="Filter products by Android"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags3"
                            aria-label="Filter products by Android"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags3"
                              aria-label="Filter products by Android"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    Android
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Add
                                color="telusPurple"
                              >
                                <Button
                                  color="telusPurple"
                                  tag="button"
                                  variant="default"
                                >
                                  <ThemeProvider
                                    theme={
                                      Object {
                                        "hoverBackgroundColor": "#d8d8d8",
                                        "iconColor": "#2a2c2e",
                                      }
                                    }
                                  >
                                    <Styled(StyledInteractiveIconButton)
                                      as="button"
                                      color="telusPurple"
                                      variant="default"
                                    >
                                      <StyledComponent
                                        as="button"
                                        color="telusPurple"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-htpNat",
                                              "isStatic": false,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                "padding: 0;",
                                                "margin: 0;",
                                                "border-width: 0;",
                                                "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                                                "color: #2a2c2e;",
                                                "appearance: none;",
                                                "background: none;",
                                                "box-shadow: none;",
                                                "cursor: pointer;",
                                                [Function],
                                                "width: 2.5rem;",
                                                "height: 2.5rem;",
                                                "display: inline-flex;",
                                                "justify-content: center;",
                                                "align-items: center;",
                                                "position: relative;",
                                                "-webkit-tap-highlight-color: transparent;",
                                                "transition: transform 150ms ease-in-out;",
                                                "&:hover svg {",
                                                "transform: scale(1.1, 1.1);",
                                                "}",
                                                "&:active svg {",
                                                "transform: scale(1, 1);",
                                                "}",
                                                "@media (prefers-reduced-motion: reduce) {",
                                                "transition: none;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "Styled(StyledInteractiveIconButton)",
                                            "foldedComponentIds": Array [
                                              "c6",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "sc-htpNat",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        variant="default"
                                      >
                                        <button
                                          className="c6 c7"
                                          color="telusPurple"
                                        >
                                          <A11yContent>
                                            <A11yContent__StyledA11yContent>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                      "isStatic": false,
                                                      "lastClassName": "c0",
                                                      "rules": Array [
                                                        "position: absolute;",
                                                        "height: 1px;",
                                                        "width: 1px;",
                                                        "overflow: hidden;",
                                                        "clip: rect(1px, 1px, 1px, 1px);",
                                                      ],
                                                    },
                                                    "displayName": "A11yContent__StyledA11yContent",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c0"
                                                />
                                              </StyledComponent>
                                            </A11yContent__StyledA11yContent>
                                          </A11yContent>
                                          <StyledInteractiveIconHover>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                    "isStatic": false,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      [Function],
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                      "position: absolute;",
                                                      "top: 0;",
                                                      "left: 0;",
                                                      "width: 100%;",
                                                      "height: 100%;",
                                                      "z-index: 1;",
                                                      "border-radius: 50%;",
                                                      "transition: transform 200ms ease-in-out;",
                                                      "transform: scale(0,0);",
                                                      ".c6:focus &, .c6:active & {",
                                                      "transform: scale(1,1);",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "StyledInteractiveIconHover",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                  "target": "span",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <span
                                                className="c8"
                                              />
                                            </StyledComponent>
                                          </StyledInteractiveIconHover>
                                          <Styled(StyledInteractiveIconSVG)
                                            height="24"
                                            viewBox="0 0 24 24"
                                            width="24"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c9",
                                                    "rules": Array [
                                                      [Function],
                                                      "width: 1.5rem;",
                                                      "height: 1.5rem;",
                                                      "z-index: 2;",
                                                      "transition: transform 150ms ease-in-out;",
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(StyledInteractiveIconSVG)",
                                                  "foldedComponentIds": Array [
                                                    "StyledInteractiveIconSVG-ix2erv-0",
                                                  ],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": "svg",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              height="24"
                                              viewBox="0 0 24 24"
                                              width="24"
                                            >
                                              <svg
                                                className="c9"
                                                height="24"
                                                viewBox="0 0 24 24"
                                                width="24"
                                              >
                                                <path
                                                  d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                                  fillRule="nonzero"
                                                />
                                              </svg>
                                            </StyledComponent>
                                          </Styled(StyledInteractiveIconSVG)>
                                        </button>
                                      </StyledComponent>
                                    </Styled(StyledInteractiveIconButton)>
                                  </ThemeProvider>
                                </Button>
                              </Add>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
                <TagItem
                  aria-describedby="tags3"
                  aria-label="Filter products by iOS"
                  isLoading={false}
                  isSelected={true}
                  key="iOS"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={true}
                    aria-describedby="tags3"
                    aria-label="Filter products by iOS"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={true}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={true}
                      aria-describedby="tags3"
                      aria-label="Filter products by iOS"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c10",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={true}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={true}
                        aria-describedby="tags3"
                        aria-label="Filter products by iOS"
                        between={2}
                        className="c10"
                        inline={true}
                        isLoading={false}
                        isSelected={true}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={true}
                          aria-describedby="tags3"
                          aria-label="Filter products by iOS"
                          between={2}
                          className="c10"
                          inline={true}
                          isLoading={false}
                          isSelected={true}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={true}
                            aria-describedby="tags3"
                            aria-label="Filter products by iOS"
                            between={2}
                            className="c10"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={true}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={true}
                              aria-describedby="tags3"
                              aria-label="Filter products by iOS"
                              className="c4 c10 TagItem__StyledTagButton-u8wmmz-0 c10"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    iOS
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Close
                                color="white"
                              >
                                <Button
                                  color="white"
                                  tag="button"
                                  variant="default"
                                >
                                  <ThemeProvider
                                    theme={
                                      Object {
                                        "hoverBackgroundColor": "#d8d8d8",
                                        "iconColor": "#2a2c2e",
                                      }
                                    }
                                  >
                                    <Styled(StyledInteractiveIconButton)
                                      as="button"
                                      color="white"
                                      variant="default"
                                    >
                                      <StyledComponent
                                        as="button"
                                        color="white"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-htpNat",
                                              "isStatic": false,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                "padding: 0;",
                                                "margin: 0;",
                                                "border-width: 0;",
                                                "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                                                "color: #2a2c2e;",
                                                "appearance: none;",
                                                "background: none;",
                                                "box-shadow: none;",
                                                "cursor: pointer;",
                                                [Function],
                                                "width: 2.5rem;",
                                                "height: 2.5rem;",
                                                "display: inline-flex;",
                                                "justify-content: center;",
                                                "align-items: center;",
                                                "position: relative;",
                                                "-webkit-tap-highlight-color: transparent;",
                                                "transition: transform 150ms ease-in-out;",
                                                "&:hover svg {",
                                                "transform: scale(1.1, 1.1);",
                                                "}",
                                                "&:active svg {",
                                                "transform: scale(1, 1);",
                                                "}",
                                                "@media (prefers-reduced-motion: reduce) {",
                                                "transition: none;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "Styled(StyledInteractiveIconButton)",
                                            "foldedComponentIds": Array [
                                              "c6",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "sc-htpNat",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        variant="default"
                                      >
                                        <button
                                          className="c6 c7"
                                          color="white"
                                        >
                                          <A11yContent>
                                            <A11yContent__StyledA11yContent>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                      "isStatic": false,
                                                      "lastClassName": "c0",
                                                      "rules": Array [
                                                        "position: absolute;",
                                                        "height: 1px;",
                                                        "width: 1px;",
                                                        "overflow: hidden;",
                                                        "clip: rect(1px, 1px, 1px, 1px);",
                                                      ],
                                                    },
                                                    "displayName": "A11yContent__StyledA11yContent",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c0"
                                                />
                                              </StyledComponent>
                                            </A11yContent__StyledA11yContent>
                                          </A11yContent>
                                          <StyledInteractiveIconHover>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                    "isStatic": false,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      [Function],
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                      "position: absolute;",
                                                      "top: 0;",
                                                      "left: 0;",
                                                      "width: 100%;",
                                                      "height: 100%;",
                                                      "z-index: 1;",
                                                      "border-radius: 50%;",
                                                      "transition: transform 200ms ease-in-out;",
                                                      "transform: scale(0,0);",
                                                      ".c6:focus &, .c6:active & {",
                                                      "transform: scale(1,1);",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "StyledInteractiveIconHover",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                  "target": "span",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <span
                                                className="c8"
                                              />
                                            </StyledComponent>
                                          </StyledInteractiveIconHover>
                                          <Styled(StyledInteractiveIconSVG)
                                            height="24"
                                            viewBox="0 0 24 24"
                                            width="24"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c9",
                                                    "rules": Array [
                                                      [Function],
                                                      "width: 1.5rem;",
                                                      "height: 1.5rem;",
                                                      "z-index: 2;",
                                                      "transition: transform 150ms ease-in-out;",
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(StyledInteractiveIconSVG)",
                                                  "foldedComponentIds": Array [
                                                    "StyledInteractiveIconSVG-ix2erv-0",
                                                  ],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": "svg",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              height="24"
                                              viewBox="0 0 24 24"
                                              width="24"
                                            >
                                              <svg
                                                className="c9"
                                                height="24"
                                                viewBox="0 0 24 24"
                                                width="24"
                                              >
                                                <path
                                                  d="M12 12.707l-4.147 4.146a.498.498 0 0 1-.707 0 .5.5 0 0 1 0-.707L11.293 12 7.146 7.853a.5.5 0 0 1 .707-.707L12 11.293l4.146-4.147a.5.5 0 0 1 .707.707L12.707 12l4.146 4.146a.5.5 0 0 1-.707.707L12 12.707zM12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957z"
                                                  fillRule="nonzero"
                                                />
                                              </svg>
                                            </StyledComponent>
                                          </Styled(StyledInteractiveIconSVG)>
                                        </button>
                                      </StyledComponent>
                                    </Styled(StyledInteractiveIconButton)>
                                  </ThemeProvider>
                                </Button>
                              </Close>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
              </div>
            </StyledComponent>
          </styled.div>
        </Box>
      </StyledComponent>
    </Tags__StyledTagsContainer>
  </div>
</Tags>
`;

exports[`Tags renders when using the children prop 1`] = `
.c0 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c8 {
  background-color: #d8d8d8;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  border-radius: 50%;
  -webkit-transition: -webkit-transform 200ms ease-in-out;
  -webkit-transition: transform 200ms ease-in-out;
  transition: transform 200ms ease-in-out;
  -webkit-transform: scale(0,0);
  -ms-transform: scale(0,0);
  transform: scale(0,0);
}

.c6:focus .c8,
.c6:active .c8 {
  -webkit-transform: scale(1,1);
  -ms-transform: scale(1,1);
  transform: scale(1,1);
}

.c9 {
  fill: #2a2c2e;
  width: 1.5rem;
  height: 1.5rem;
  z-index: 2;
  -webkit-transition: -webkit-transform 150ms ease-in-out;
  -webkit-transition: transform 150ms ease-in-out;
  transition: transform 150ms ease-in-out;
}

.c7 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  outline: none;
  width: 2.5rem;
  height: 2.5rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-tap-highlight-color: transparent;
  -webkit-transition: -webkit-transform 150ms ease-in-out;
  -webkit-transition: transform 150ms ease-in-out;
  transition: transform 150ms ease-in-out;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c7:hover svg {
  -webkit-transform: scale(1.1,1.1);
  -ms-transform: scale(1.1,1.1);
  transform: scale(1.1,1.1);
}

.c7:active svg {
  -webkit-transform: scale(1,1);
  -ms-transform: scale(1,1);
  transform: scale(1,1);
}

.c3 {
  margin-top: 1rem;
  overflow: visible;
  color: #4b286d;
  background: #fff;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  border: 1px solid #4b286d;
  border-radius: 1.25rem;
  height: 2.5rem;
}

.c3:hover {
  background: #fff;
}

.c3:hover:after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  bottom: -2px;
  right: -2px;
  border: 1px solid #33204C;
  border-radius: 1.375rem;
}

.c3::-moz-focus-inner {
  border: 0;
}

.c3:focus {
  outline: none;
  background-color: #fff;
}

.c3:focus:after {
  content: '';
  position: absolute;
  top: -11px;
  left: -11px;
  bottom: -11px;
  right: -11px;
  border: 3px solid #7557A0;
  margin: 5px;
  border-radius: 1.5625rem;
}

.c3:active {
  background-color: #F1EFF4;
}

.c3:after {
  content: '';
}

.c5 {
  margin-left: 0.5rem;
}

.c1 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: -1rem;
}

@media (prefers-reduced-motion:reduce) {
  .c8 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c9 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c7 {
    -webkit-transition: none;
    transition: none;
  }
}

<Tags
  copy="en"
  onClick={[Function]}
>
  <div>
    <A11yContent
      aria-live="assertive"
      id="tags2"
    >
      <A11yContent__StyledA11yContent
        aria-live="assertive"
        id="tags2"
      >
        <StyledComponent
          aria-live="assertive"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "position: absolute;",
                  "height: 1px;",
                  "width: 1px;",
                  "overflow: hidden;",
                  "clip: rect(1px, 1px, 1px, 1px);",
                ],
              },
              "displayName": "A11yContent__StyledA11yContent",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          id="tags2"
        >
          <span
            aria-live="assertive"
            className="c0"
            id="tags2"
          >
            No product filters currently applied
          </span>
        </StyledComponent>
      </A11yContent__StyledA11yContent>
    </A11yContent>
    <Tags__StyledTagsContainer
      between={3}
      inline={true}
    >
      <StyledComponent
        between={3}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "flex-wrap: wrap;",
                "margin-top: -1rem;",
              ],
            },
            "displayName": "Tags__StyledTagsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inline={true}
      >
        <Box
          between={3}
          className="c1"
          inline={true}
          tag="div"
        >
          <styled.div
            between={3}
            className="c1"
            inline={true}
            tag="div"
          >
            <StyledComponent
              between={3}
              className="c1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inline={true}
              tag="div"
            >
              <div
                className="c2 c1 Tags__StyledTagsContainer-sc-17pk8ma-0 c1"
              >
                <TagItem
                  aria-describedby="tags2"
                  aria-label="Filter products by Android"
                  isLoading={false}
                  isSelected={false}
                  key=".$android"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags2"
                    aria-label="Filter products by Android"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags2"
                      aria-label="Filter products by Android"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags2"
                        aria-label="Filter products by Android"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags2"
                          aria-label="Filter products by Android"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags2"
                            aria-label="Filter products by Android"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags2"
                              aria-label="Filter products by Android"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    Android
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Add
                                color="telusPurple"
                              >
                                <Button
                                  color="telusPurple"
                                  tag="button"
                                  variant="default"
                                >
                                  <ThemeProvider
                                    theme={
                                      Object {
                                        "hoverBackgroundColor": "#d8d8d8",
                                        "iconColor": "#2a2c2e",
                                      }
                                    }
                                  >
                                    <Styled(StyledInteractiveIconButton)
                                      as="button"
                                      color="telusPurple"
                                      variant="default"
                                    >
                                      <StyledComponent
                                        as="button"
                                        color="telusPurple"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-htpNat",
                                              "isStatic": false,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                "padding: 0;",
                                                "margin: 0;",
                                                "border-width: 0;",
                                                "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                                                "color: #2a2c2e;",
                                                "appearance: none;",
                                                "background: none;",
                                                "box-shadow: none;",
                                                "cursor: pointer;",
                                                [Function],
                                                "width: 2.5rem;",
                                                "height: 2.5rem;",
                                                "display: inline-flex;",
                                                "justify-content: center;",
                                                "align-items: center;",
                                                "position: relative;",
                                                "-webkit-tap-highlight-color: transparent;",
                                                "transition: transform 150ms ease-in-out;",
                                                "&:hover svg {",
                                                "transform: scale(1.1, 1.1);",
                                                "}",
                                                "&:active svg {",
                                                "transform: scale(1, 1);",
                                                "}",
                                                "@media (prefers-reduced-motion: reduce) {",
                                                "transition: none;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "Styled(StyledInteractiveIconButton)",
                                            "foldedComponentIds": Array [
                                              "c6",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "sc-htpNat",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        variant="default"
                                      >
                                        <button
                                          className="c6 c7"
                                          color="telusPurple"
                                        >
                                          <A11yContent>
                                            <A11yContent__StyledA11yContent>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                      "isStatic": false,
                                                      "lastClassName": "c0",
                                                      "rules": Array [
                                                        "position: absolute;",
                                                        "height: 1px;",
                                                        "width: 1px;",
                                                        "overflow: hidden;",
                                                        "clip: rect(1px, 1px, 1px, 1px);",
                                                      ],
                                                    },
                                                    "displayName": "A11yContent__StyledA11yContent",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c0"
                                                />
                                              </StyledComponent>
                                            </A11yContent__StyledA11yContent>
                                          </A11yContent>
                                          <StyledInteractiveIconHover>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                    "isStatic": false,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      [Function],
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                      "position: absolute;",
                                                      "top: 0;",
                                                      "left: 0;",
                                                      "width: 100%;",
                                                      "height: 100%;",
                                                      "z-index: 1;",
                                                      "border-radius: 50%;",
                                                      "transition: transform 200ms ease-in-out;",
                                                      "transform: scale(0,0);",
                                                      ".c6:focus &, .c6:active & {",
                                                      "transform: scale(1,1);",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "StyledInteractiveIconHover",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                  "target": "span",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <span
                                                className="c8"
                                              />
                                            </StyledComponent>
                                          </StyledInteractiveIconHover>
                                          <Styled(StyledInteractiveIconSVG)
                                            height="24"
                                            viewBox="0 0 24 24"
                                            width="24"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c9",
                                                    "rules": Array [
                                                      [Function],
                                                      "width: 1.5rem;",
                                                      "height: 1.5rem;",
                                                      "z-index: 2;",
                                                      "transition: transform 150ms ease-in-out;",
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(StyledInteractiveIconSVG)",
                                                  "foldedComponentIds": Array [
                                                    "StyledInteractiveIconSVG-ix2erv-0",
                                                  ],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": "svg",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              height="24"
                                              viewBox="0 0 24 24"
                                              width="24"
                                            >
                                              <svg
                                                className="c9"
                                                height="24"
                                                viewBox="0 0 24 24"
                                                width="24"
                                              >
                                                <path
                                                  d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                                  fillRule="nonzero"
                                                />
                                              </svg>
                                            </StyledComponent>
                                          </Styled(StyledInteractiveIconSVG)>
                                        </button>
                                      </StyledComponent>
                                    </Styled(StyledInteractiveIconButton)>
                                  </ThemeProvider>
                                </Button>
                              </Add>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
                <TagItem
                  aria-describedby="tags2"
                  aria-label="Filter products by iOS"
                  isLoading={false}
                  isSelected={false}
                  key=".$ios"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags2"
                    aria-label="Filter products by iOS"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags2"
                      aria-label="Filter products by iOS"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags2"
                        aria-label="Filter products by iOS"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags2"
                          aria-label="Filter products by iOS"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags2"
                            aria-label="Filter products by iOS"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags2"
                              aria-label="Filter products by iOS"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    iOS
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Add
                                color="telusPurple"
                              >
                                <Button
                                  color="telusPurple"
                                  tag="button"
                                  variant="default"
                                >
                                  <ThemeProvider
                                    theme={
                                      Object {
                                        "hoverBackgroundColor": "#d8d8d8",
                                        "iconColor": "#2a2c2e",
                                      }
                                    }
                                  >
                                    <Styled(StyledInteractiveIconButton)
                                      as="button"
                                      color="telusPurple"
                                      variant="default"
                                    >
                                      <StyledComponent
                                        as="button"
                                        color="telusPurple"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-htpNat",
                                              "isStatic": false,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                "padding: 0;",
                                                "margin: 0;",
                                                "border-width: 0;",
                                                "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                                                "color: #2a2c2e;",
                                                "appearance: none;",
                                                "background: none;",
                                                "box-shadow: none;",
                                                "cursor: pointer;",
                                                [Function],
                                                "width: 2.5rem;",
                                                "height: 2.5rem;",
                                                "display: inline-flex;",
                                                "justify-content: center;",
                                                "align-items: center;",
                                                "position: relative;",
                                                "-webkit-tap-highlight-color: transparent;",
                                                "transition: transform 150ms ease-in-out;",
                                                "&:hover svg {",
                                                "transform: scale(1.1, 1.1);",
                                                "}",
                                                "&:active svg {",
                                                "transform: scale(1, 1);",
                                                "}",
                                                "@media (prefers-reduced-motion: reduce) {",
                                                "transition: none;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "Styled(StyledInteractiveIconButton)",
                                            "foldedComponentIds": Array [
                                              "c6",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "sc-htpNat",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        variant="default"
                                      >
                                        <button
                                          className="c6 c7"
                                          color="telusPurple"
                                        >
                                          <A11yContent>
                                            <A11yContent__StyledA11yContent>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                      "isStatic": false,
                                                      "lastClassName": "c0",
                                                      "rules": Array [
                                                        "position: absolute;",
                                                        "height: 1px;",
                                                        "width: 1px;",
                                                        "overflow: hidden;",
                                                        "clip: rect(1px, 1px, 1px, 1px);",
                                                      ],
                                                    },
                                                    "displayName": "A11yContent__StyledA11yContent",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c0"
                                                />
                                              </StyledComponent>
                                            </A11yContent__StyledA11yContent>
                                          </A11yContent>
                                          <StyledInteractiveIconHover>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                    "isStatic": false,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      [Function],
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                      "position: absolute;",
                                                      "top: 0;",
                                                      "left: 0;",
                                                      "width: 100%;",
                                                      "height: 100%;",
                                                      "z-index: 1;",
                                                      "border-radius: 50%;",
                                                      "transition: transform 200ms ease-in-out;",
                                                      "transform: scale(0,0);",
                                                      ".c6:focus &, .c6:active & {",
                                                      "transform: scale(1,1);",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "StyledInteractiveIconHover",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "StyledInteractiveIconHover-sc-1aj10i2-0",
                                                  "target": "span",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <span
                                                className="c8"
                                              />
                                            </StyledComponent>
                                          </StyledInteractiveIconHover>
                                          <Styled(StyledInteractiveIconSVG)
                                            height="24"
                                            viewBox="0 0 24 24"
                                            width="24"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c9",
                                                    "rules": Array [
                                                      [Function],
                                                      "width: 1.5rem;",
                                                      "height: 1.5rem;",
                                                      "z-index: 2;",
                                                      "transition: transform 150ms ease-in-out;",
                                                      "@media (prefers-reduced-motion: reduce) {",
                                                      "transition: none;",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(StyledInteractiveIconSVG)",
                                                  "foldedComponentIds": Array [
                                                    "StyledInteractiveIconSVG-ix2erv-0",
                                                  ],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": "svg",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              height="24"
                                              viewBox="0 0 24 24"
                                              width="24"
                                            >
                                              <svg
                                                className="c9"
                                                height="24"
                                                viewBox="0 0 24 24"
                                                width="24"
                                              >
                                                <path
                                                  d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                                  fillRule="nonzero"
                                                />
                                              </svg>
                                            </StyledComponent>
                                          </Styled(StyledInteractiveIconSVG)>
                                        </button>
                                      </StyledComponent>
                                    </Styled(StyledInteractiveIconButton)>
                                  </ThemeProvider>
                                </Button>
                              </Add>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
              </div>
            </StyledComponent>
          </styled.div>
        </Box>
      </StyledComponent>
    </Tags__StyledTagsContainer>
  </div>
</Tags>
`;
