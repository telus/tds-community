// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tags renders 1`] = `
.c0 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c6 {
  position: relative;
  top: 0;
  width: 24px;
  height: 24px;
  fill: #4b286d;
}

.c3 {
  margin-top: 1rem;
  overflow: visible;
  color: #4b286d;
  background: #fff;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  border: 1px solid #4b286d;
  border-radius: 20px;
  height: 2.5rem;
}

.c3:hover {
  background: #fff;
}

.c3:hover:after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  bottom: -2px;
  right: -2px;
  border: 1px solid #33204C;
  border-radius: 22px;
}

.c3:focus {
  outline: none;
  background-color: #fff;
}

.c3:focus:after {
  content: '';
  position: absolute;
  top: -11px;
  left: -11px;
  bottom: -11px;
  right: -11px;
  border: 3px solid #7557A0;
  margin: 5px;
  border-radius: 25px;
}

.c3:active {
  background-color: #F1EFF4;
}

.c3:after {
  content: '';
}

.c5 {
  margin-left: 0.5rem;
}

.c1 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: -1rem;
}

<Tags
  copy="en"
  onClick={[Function]}
  tags={
    Array [
      Object {
        "children": "Android",
        "isLoading": false,
        "isSelected": false,
      },
      Object {
        "children": "iOS",
        "isLoading": false,
        "isSelected": false,
      },
    ]
  }
>
  <div>
    <A11yContent
      aria-live="assertive"
      id="tags1"
    >
      <A11yContent__StyledA11yContent
        aria-live="assertive"
        id="tags1"
      >
        <StyledComponent
          aria-live="assertive"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "position: absolute;",
                  "height: 1px;",
                  "width: 1px;",
                  "overflow: hidden;",
                  "clip: rect(1px, 1px, 1px, 1px);",
                ],
              },
              "displayName": "A11yContent__StyledA11yContent",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          id="tags1"
        >
          <span
            aria-live="assertive"
            className="c0"
            id="tags1"
          >
            No product filters currently applied
          </span>
        </StyledComponent>
      </A11yContent__StyledA11yContent>
    </A11yContent>
    <Tags__StyledTagsContainer
      between={3}
      inline={true}
    >
      <StyledComponent
        between={3}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "flex-wrap: wrap;",
                "margin-top: -1rem;",
              ],
            },
            "displayName": "Tags__StyledTagsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inline={true}
      >
        <Box
          between={3}
          className="c1"
          inline={true}
          tag="div"
        >
          <styled.div
            between={3}
            className="c1"
            inline={true}
            tag="div"
          >
            <StyledComponent
              between={3}
              className="c1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inline={true}
              tag="div"
            >
              <div
                className="c2 c1 Tags__StyledTagsContainer-sc-17pk8ma-0 c1"
              >
                <TagItem
                  aria-describedby="tags1"
                  aria-label="Filter products by Android"
                  isLoading={false}
                  isSelected={false}
                  key="Android"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags1"
                    aria-label="Filter products by Android"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags1"
                      aria-label="Filter products by Android"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags1"
                        aria-label="Filter products by Android"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags1"
                          aria-label="Filter products by Android"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags1"
                            aria-label="Filter products by Android"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags1"
                              aria-label="Filter products by Android"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    Android
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Dependent
                                color="telusPurple"
                              >
                                <Dependent
                                  color="telusPurple"
                                >
                                  <styled.svg
                                    color="telusPurple"
                                    data-testid="dependentSvg"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    width="24"
                                  >
                                    <StyledComponent
                                      color="telusPurple"
                                      data-testid="dependentSvg"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [
                                            Object {
                                              "aria-hidden": true,
                                              "focusable": false,
                                            },
                                          ],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="24"
                                      viewBox="0 0 24 24"
                                      width="24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="c6"
                                        color="telusPurple"
                                        data-testid="dependentSvg"
                                        focusable={false}
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                      >
                                        <path
                                          d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                </Dependent>
                              </Dependent>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
                <TagItem
                  aria-describedby="tags1"
                  aria-label="Filter products by iOS"
                  isLoading={false}
                  isSelected={false}
                  key="iOS"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags1"
                    aria-label="Filter products by iOS"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags1"
                      aria-label="Filter products by iOS"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags1"
                        aria-label="Filter products by iOS"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags1"
                          aria-label="Filter products by iOS"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags1"
                            aria-label="Filter products by iOS"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags1"
                              aria-label="Filter products by iOS"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    iOS
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Dependent
                                color="telusPurple"
                              >
                                <Dependent
                                  color="telusPurple"
                                >
                                  <styled.svg
                                    color="telusPurple"
                                    data-testid="dependentSvg"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    width="24"
                                  >
                                    <StyledComponent
                                      color="telusPurple"
                                      data-testid="dependentSvg"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [
                                            Object {
                                              "aria-hidden": true,
                                              "focusable": false,
                                            },
                                          ],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="24"
                                      viewBox="0 0 24 24"
                                      width="24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="c6"
                                        color="telusPurple"
                                        data-testid="dependentSvg"
                                        focusable={false}
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                      >
                                        <path
                                          d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                </Dependent>
                              </Dependent>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
              </div>
            </StyledComponent>
          </styled.div>
        </Box>
      </StyledComponent>
    </Tags__StyledTagsContainer>
  </div>
</Tags>
`;

exports[`Tags renders isSelected 1`] = `
.c0 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c6 {
  position: relative;
  top: 0;
  width: 24px;
  height: 24px;
  fill: #4b286d;
}

.c8 {
  position: relative;
  top: 0;
  width: 24px;
  height: 24px;
  fill: #fff;
}

.c3 {
  margin-top: 1rem;
  overflow: visible;
  color: #4b286d;
  background: #fff;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  border: 1px solid #4b286d;
  border-radius: 20px;
  height: 2.5rem;
}

.c3:hover {
  background: #fff;
}

.c3:hover:after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  bottom: -2px;
  right: -2px;
  border: 1px solid #33204C;
  border-radius: 22px;
}

.c3:focus {
  outline: none;
  background-color: #fff;
}

.c3:focus:after {
  content: '';
  position: absolute;
  top: -11px;
  left: -11px;
  bottom: -11px;
  right: -11px;
  border: 3px solid #7557A0;
  margin: 5px;
  border-radius: 25px;
}

.c3:active {
  background-color: #F1EFF4;
}

.c3:after {
  content: '';
}

.c7 {
  margin-top: 1rem;
  overflow: visible;
  color: #fff;
  background: #4b286d;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  border: 1px solid #4b286d;
  border-radius: 20px;
  height: 2.5rem;
}

.c7:hover {
  background: #33204C;
  border: 1px solid #33204C;
}

.c7:hover:after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  bottom: -2px;
  right: -2px;
  border: 1px solid #33204C;
  border-radius: 22px;
}

.c7:focus {
  outline: none;
  background-color: #33204C;
}

.c7:focus:after {
  content: '';
  position: absolute;
  top: -10px;
  left: -10px;
  bottom: -10px;
  right: -10px;
  border: 2px solid #7557A0;
  margin: 5px;
  border-radius: 25px;
}

.c7:active {
  background-color: #201430;
  border: 1px solid #201430;
}

.c7:after {
  content: '';
}

.c5 {
  margin-left: 0.5rem;
}

.c1 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: -1rem;
}

<Tags
  copy="en"
  onClick={[Function]}
  tags={
    Array [
      Object {
        "children": "Android",
        "isLoading": false,
        "isSelected": false,
      },
      Object {
        "children": "iOS",
        "isLoading": false,
        "isSelected": true,
      },
    ]
  }
>
  <div>
    <A11yContent
      aria-live="assertive"
      id="tags3"
    >
      <A11yContent__StyledA11yContent
        aria-live="assertive"
        id="tags3"
      >
        <StyledComponent
          aria-live="assertive"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "position: absolute;",
                  "height: 1px;",
                  "width: 1px;",
                  "overflow: hidden;",
                  "clip: rect(1px, 1px, 1px, 1px);",
                ],
              },
              "displayName": "A11yContent__StyledA11yContent",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          id="tags3"
        >
          <span
            aria-live="assertive"
            className="c0"
            id="tags3"
          >
            Products currently filtered by iOS
          </span>
        </StyledComponent>
      </A11yContent__StyledA11yContent>
    </A11yContent>
    <Tags__StyledTagsContainer
      between={3}
      inline={true}
    >
      <StyledComponent
        between={3}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "flex-wrap: wrap;",
                "margin-top: -1rem;",
              ],
            },
            "displayName": "Tags__StyledTagsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inline={true}
      >
        <Box
          between={3}
          className="c1"
          inline={true}
          tag="div"
        >
          <styled.div
            between={3}
            className="c1"
            inline={true}
            tag="div"
          >
            <StyledComponent
              between={3}
              className="c1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inline={true}
              tag="div"
            >
              <div
                className="c2 c1 Tags__StyledTagsContainer-sc-17pk8ma-0 c1"
              >
                <TagItem
                  aria-describedby="tags3"
                  aria-label="Filter products by Android"
                  isLoading={false}
                  isSelected={false}
                  key="Android"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags3"
                    aria-label="Filter products by Android"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags3"
                      aria-label="Filter products by Android"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c7",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags3"
                        aria-label="Filter products by Android"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags3"
                          aria-label="Filter products by Android"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags3"
                            aria-label="Filter products by Android"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags3"
                              aria-label="Filter products by Android"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    Android
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Dependent
                                color="telusPurple"
                              >
                                <Dependent
                                  color="telusPurple"
                                >
                                  <styled.svg
                                    color="telusPurple"
                                    data-testid="dependentSvg"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    width="24"
                                  >
                                    <StyledComponent
                                      color="telusPurple"
                                      data-testid="dependentSvg"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [
                                            Object {
                                              "aria-hidden": true,
                                              "focusable": false,
                                            },
                                          ],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="24"
                                      viewBox="0 0 24 24"
                                      width="24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="c6"
                                        color="telusPurple"
                                        data-testid="dependentSvg"
                                        focusable={false}
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                      >
                                        <path
                                          d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                </Dependent>
                              </Dependent>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
                <TagItem
                  aria-describedby="tags3"
                  aria-label="Filter products by iOS"
                  isLoading={false}
                  isSelected={true}
                  key="iOS"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={true}
                    aria-describedby="tags3"
                    aria-label="Filter products by iOS"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={true}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={true}
                      aria-describedby="tags3"
                      aria-label="Filter products by iOS"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c7",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={true}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={true}
                        aria-describedby="tags3"
                        aria-label="Filter products by iOS"
                        between={2}
                        className="c7"
                        inline={true}
                        isLoading={false}
                        isSelected={true}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={true}
                          aria-describedby="tags3"
                          aria-label="Filter products by iOS"
                          between={2}
                          className="c7"
                          inline={true}
                          isLoading={false}
                          isSelected={true}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={true}
                            aria-describedby="tags3"
                            aria-label="Filter products by iOS"
                            between={2}
                            className="c7"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={true}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={true}
                              aria-describedby="tags3"
                              aria-label="Filter products by iOS"
                              className="c4 c7 TagItem__StyledTagButton-u8wmmz-0 c7"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    iOS
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Dependent
                                color="white"
                              >
                                <Dependent
                                  color="white"
                                >
                                  <styled.svg
                                    color="white"
                                    data-testid="dependentSvg"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    width="24"
                                  >
                                    <StyledComponent
                                      color="white"
                                      data-testid="dependentSvg"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [
                                            Object {
                                              "aria-hidden": true,
                                              "focusable": false,
                                            },
                                          ],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="24"
                                      viewBox="0 0 24 24"
                                      width="24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="c8"
                                        color="white"
                                        data-testid="dependentSvg"
                                        focusable={false}
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                      >
                                        <path
                                          d="M12 12.707l-4.147 4.146a.498.498 0 0 1-.707 0 .5.5 0 0 1 0-.707L11.293 12 7.146 7.853a.5.5 0 0 1 .707-.707L12 11.293l4.146-4.147a.5.5 0 0 1 .707.707L12.707 12l4.146 4.146a.5.5 0 0 1-.707.707L12 12.707zM12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                </Dependent>
                              </Dependent>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
              </div>
            </StyledComponent>
          </styled.div>
        </Box>
      </StyledComponent>
    </Tags__StyledTagsContainer>
  </div>
</Tags>
`;

exports[`Tags renders when using the children prop 1`] = `
.c0 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c6 {
  position: relative;
  top: 0;
  width: 24px;
  height: 24px;
  fill: #4b286d;
}

.c3 {
  margin-top: 1rem;
  overflow: visible;
  color: #4b286d;
  background: #fff;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  border: 1px solid #4b286d;
  border-radius: 20px;
  height: 2.5rem;
}

.c3:hover {
  background: #fff;
}

.c3:hover:after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  bottom: -2px;
  right: -2px;
  border: 1px solid #33204C;
  border-radius: 22px;
}

.c3:focus {
  outline: none;
  background-color: #fff;
}

.c3:focus:after {
  content: '';
  position: absolute;
  top: -11px;
  left: -11px;
  bottom: -11px;
  right: -11px;
  border: 3px solid #7557A0;
  margin: 5px;
  border-radius: 25px;
}

.c3:active {
  background-color: #F1EFF4;
}

.c3:after {
  content: '';
}

.c5 {
  margin-left: 0.5rem;
}

.c1 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: -1rem;
}

<Tags
  copy="en"
  onClick={[Function]}
>
  <div>
    <A11yContent
      aria-live="assertive"
      id="tags2"
    >
      <A11yContent__StyledA11yContent
        aria-live="assertive"
        id="tags2"
      >
        <StyledComponent
          aria-live="assertive"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "position: absolute;",
                  "height: 1px;",
                  "width: 1px;",
                  "overflow: hidden;",
                  "clip: rect(1px, 1px, 1px, 1px);",
                ],
              },
              "displayName": "A11yContent__StyledA11yContent",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          id="tags2"
        >
          <span
            aria-live="assertive"
            className="c0"
            id="tags2"
          >
            No product filters currently applied
          </span>
        </StyledComponent>
      </A11yContent__StyledA11yContent>
    </A11yContent>
    <Tags__StyledTagsContainer
      between={3}
      inline={true}
    >
      <StyledComponent
        between={3}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "flex-wrap: wrap;",
                "margin-top: -1rem;",
              ],
            },
            "displayName": "Tags__StyledTagsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Tags__StyledTagsContainer-sc-17pk8ma-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inline={true}
      >
        <Box
          between={3}
          className="c1"
          inline={true}
          tag="div"
        >
          <styled.div
            between={3}
            className="c1"
            inline={true}
            tag="div"
          >
            <StyledComponent
              between={3}
              className="c1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inline={true}
              tag="div"
            >
              <div
                className="c2 c1 Tags__StyledTagsContainer-sc-17pk8ma-0 c1"
              >
                <TagItem
                  aria-describedby="tags2"
                  aria-label="Filter products by Android"
                  isLoading={false}
                  isSelected={false}
                  key=".$android"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags2"
                    aria-label="Filter products by Android"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags2"
                      aria-label="Filter products by Android"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags2"
                        aria-label="Filter products by Android"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags2"
                          aria-label="Filter products by Android"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags2"
                            aria-label="Filter products by Android"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags2"
                              aria-label="Filter products by Android"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    Android
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Dependent
                                color="telusPurple"
                              >
                                <Dependent
                                  color="telusPurple"
                                >
                                  <styled.svg
                                    color="telusPurple"
                                    data-testid="dependentSvg"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    width="24"
                                  >
                                    <StyledComponent
                                      color="telusPurple"
                                      data-testid="dependentSvg"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [
                                            Object {
                                              "aria-hidden": true,
                                              "focusable": false,
                                            },
                                          ],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="24"
                                      viewBox="0 0 24 24"
                                      width="24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="c6"
                                        color="telusPurple"
                                        data-testid="dependentSvg"
                                        focusable={false}
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                      >
                                        <path
                                          d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                </Dependent>
                              </Dependent>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
                <TagItem
                  aria-describedby="tags2"
                  aria-label="Filter products by iOS"
                  isLoading={false}
                  isSelected={false}
                  key=".$ios"
                  onClick={[Function]}
                >
                  <TagItem__StyledTagButton
                    aria-checked={false}
                    aria-describedby="tags2"
                    aria-label="Filter products by iOS"
                    between={2}
                    inline={true}
                    isLoading={false}
                    isSelected={false}
                    onClick={[Function]}
                    role="switch"
                    tag="button"
                  >
                    <StyledComponent
                      aria-checked={false}
                      aria-describedby="tags2"
                      aria-label="Filter products by iOS"
                      between={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "TagItem__StyledTagButton-u8wmmz-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "margin-top: 1rem;",
                              [Function],
                            ],
                          },
                          "displayName": "TagItem__StyledTagButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "TagItem__StyledTagButton-u8wmmz-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={true}
                      isLoading={false}
                      isSelected={false}
                      onClick={[Function]}
                      role="switch"
                      tag="button"
                    >
                      <Box
                        aria-checked={false}
                        aria-describedby="tags2"
                        aria-label="Filter products by iOS"
                        between={2}
                        className="c3"
                        inline={true}
                        isLoading={false}
                        isSelected={false}
                        onClick={[Function]}
                        role="switch"
                        tag="button"
                      >
                        <styled.div
                          aria-checked={false}
                          aria-describedby="tags2"
                          aria-label="Filter products by iOS"
                          between={2}
                          className="c3"
                          inline={true}
                          isLoading={false}
                          isSelected={false}
                          onClick={[Function]}
                          role="switch"
                          tag="button"
                        >
                          <StyledComponent
                            aria-checked={false}
                            aria-describedby="tags2"
                            aria-label="Filter products by iOS"
                            between={2}
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={true}
                            isLoading={false}
                            isSelected={false}
                            onClick={[Function]}
                            role="switch"
                            tag="button"
                          >
                            <button
                              aria-checked={false}
                              aria-describedby="tags2"
                              aria-label="Filter products by iOS"
                              className="c4 c3 TagItem__StyledTagButton-u8wmmz-0 c3"
                              onClick={[Function]}
                              role="switch"
                            >
                              <TagItem__StyledText>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagItem__StyledText-u8wmmz-1",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "margin-left: 0.5rem;",
                                        ],
                                      },
                                      "displayName": "TagItem__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagItem__StyledText-u8wmmz-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c5"
                                  >
                                    iOS
                                  </span>
                                </StyledComponent>
                              </TagItem__StyledText>
                              <Dependent
                                color="telusPurple"
                              >
                                <Dependent
                                  color="telusPurple"
                                >
                                  <styled.svg
                                    color="telusPurple"
                                    data-testid="dependentSvg"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    width="24"
                                  >
                                    <StyledComponent
                                      color="telusPurple"
                                      data-testid="dependentSvg"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [
                                            Object {
                                              "aria-hidden": true,
                                              "focusable": false,
                                            },
                                          ],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="24"
                                      viewBox="0 0 24 24"
                                      width="24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="c6"
                                        color="telusPurple"
                                        data-testid="dependentSvg"
                                        focusable={false}
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                      >
                                        <path
                                          d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z"
                                          fillRule="nonzero"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                </Dependent>
                              </Dependent>
                            </button>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </StyledComponent>
                  </TagItem__StyledTagButton>
                </TagItem>
              </div>
            </StyledComponent>
          </styled.div>
        </Box>
      </StyledComponent>
    </Tags__StyledTagsContainer>
  </div>
</Tags>
`;
